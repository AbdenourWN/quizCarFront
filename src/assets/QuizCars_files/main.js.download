// src/main.ts
import { bootstrapApplication } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_platform-browser.js?v=7f891212";

// src/app/app.config.ts
import { provideRouter } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";

// src/app/components/auth/auth.component.ts
import { Component as Component3 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { FormsModule as FormsModule3, ReactiveFormsModule as ReactiveFormsModule3 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_forms.js?v=7f891212";

// src/app/components/auth/login/login.component.ts
import { Component, Input } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { FormControl, Validators, FormsModule, ReactiveFormsModule, FormGroup } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_forms.js?v=7f891212";
import * as i03 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i1 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import * as i22 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";

// src/app/services/storage.service.ts
import { Injectable } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { BehaviorSubject } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs.js?v=7f891212";
import * as i0 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
var _StorageService = class _StorageService {
  constructor() {
    this.storageSub = new BehaviorSubject(null);
    this.tokenKey = "token";
  }
  // Observable to watch for changes in the token
  watchToken() {
    return this.storageSub.asObservable();
  }
  // Save the token to localStorage and emit an event
  setToken(token) {
    if (typeof window !== "undefined" && window.localStorage) {
      localStorage.setItem(this.tokenKey, token);
      this.storageSub.next(token);
    }
  }
  // Retrieve the token from localStorage
  getToken() {
    if (typeof window !== "undefined" && window.localStorage) {
      return localStorage.getItem(this.tokenKey);
    }
    return null;
  }
  // Remove the token from localStorage and emit an event
  removeToken() {
    if (typeof window !== "undefined" && window.localStorage) {
      localStorage.removeItem(this.tokenKey);
      this.storageSub.next(null);
    }
  }
  // Clear all localStorage items and emit an event
  clearStorage() {
    if (typeof window !== "undefined" && window.localStorage) {
      localStorage.clear();
      this.storageSub.next(null);
    }
  }
};
_StorageService.\u0275fac = function StorageService_Factory(t) {
  return new (t || _StorageService)();
};
_StorageService.\u0275prov = /* @__PURE__ */ i0.\u0275\u0275defineInjectable({ token: _StorageService, factory: _StorageService.\u0275fac, providedIn: "root" });
var StorageService = _StorageService;

// src/app/services/user.service.ts
import { Injectable as Injectable2 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { BehaviorSubject as BehaviorSubject2 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs.js?v=7f891212";
import { HttpHeaders } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import * as i02 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i2 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
var _UserService = class _UserService {
  constructor(storage, http) {
    this.storage = storage;
    this.http = http;
    this.userSubject = new BehaviorSubject2(null);
    this.user = this.userSubject.asObservable();
  }
  // Function to set user data
  setUser() {
    const token = this.storage.getToken();
    const headers = new HttpHeaders({
      Authorization: `Bearer ${token}`,
      "Content-Type": "application/json"
      // This is typically not needed for GET requests
    });
    this.http.get("http://localhost:3000/api/user/me", { headers }).subscribe((response) => {
      this.userSubject.next(response);
    }, (error) => {
      console.log(error);
    });
  }
  // Function to get user data
  getUser() {
    return this.userSubject.asObservable();
  }
  // Function to remove user data
  removeUser() {
    this.userSubject.next(null);
  }
};
_UserService.\u0275fac = function UserService_Factory(t) {
  return new (t || _UserService)(i02.\u0275\u0275inject(StorageService), i02.\u0275\u0275inject(i2.HttpClient));
};
_UserService.\u0275prov = /* @__PURE__ */ i02.\u0275\u0275defineInjectable({ token: _UserService, factory: _UserService.\u0275fac, providedIn: "root" });
var UserService = _UserService;

// src/app/components/auth/login/login.component.ts
import * as i5 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_forms.js?v=7f891212";
function LoginComponent_Conditional_11_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    i03.\u0275\u0275elementStart(0, "small");
    i03.\u0275\u0275text(1, " This field is required. ");
    i03.\u0275\u0275elementEnd();
  }
}
function LoginComponent_Conditional_11_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    i03.\u0275\u0275elementStart(0, "small", 14);
    i03.\u0275\u0275text(1, " Please enter a correct email! ");
    i03.\u0275\u0275elementEnd();
  }
}
function LoginComponent_Conditional_11_Template(rf, ctx) {
  if (rf & 1) {
    i03.\u0275\u0275elementStart(0, "div", 7);
    i03.\u0275\u0275template(1, LoginComponent_Conditional_11_Conditional_1_Template, 2, 0, "small")(2, LoginComponent_Conditional_11_Conditional_2_Template, 2, 0, "small", 14);
    i03.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    let tmp_1_0;
    let tmp_2_0;
    const ctx_r0 = i03.\u0275\u0275nextContext();
    i03.\u0275\u0275advance();
    i03.\u0275\u0275conditional(1, ((tmp_1_0 = ctx_r0.loginForm.get("email")) == null ? null : tmp_1_0.hasError("required")) ? 1 : -1);
    i03.\u0275\u0275advance();
    i03.\u0275\u0275conditional(2, ((tmp_2_0 = ctx_r0.loginForm.get("email")) == null ? null : tmp_2_0.hasError("email")) ? 2 : -1);
  }
}
function LoginComponent_Conditional_16_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    i03.\u0275\u0275elementStart(0, "small");
    i03.\u0275\u0275text(1, " This field is required. ");
    i03.\u0275\u0275elementEnd();
  }
}
function LoginComponent_Conditional_16_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    i03.\u0275\u0275elementStart(0, "small", 14);
    i03.\u0275\u0275text(1, " Password must be at least 8 characters! ");
    i03.\u0275\u0275elementEnd();
  }
}
function LoginComponent_Conditional_16_Template(rf, ctx) {
  if (rf & 1) {
    i03.\u0275\u0275elementStart(0, "div", 7);
    i03.\u0275\u0275template(1, LoginComponent_Conditional_16_Conditional_1_Template, 2, 0, "small")(2, LoginComponent_Conditional_16_Conditional_2_Template, 2, 0, "small", 14);
    i03.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    let tmp_1_0;
    let tmp_2_0;
    const ctx_r0 = i03.\u0275\u0275nextContext();
    i03.\u0275\u0275advance();
    i03.\u0275\u0275conditional(1, ((tmp_1_0 = ctx_r0.loginForm.get("password")) == null ? null : tmp_1_0.hasError("required")) ? 1 : -1);
    i03.\u0275\u0275advance();
    i03.\u0275\u0275conditional(2, ((tmp_2_0 = ctx_r0.loginForm.get("password")) == null ? null : tmp_2_0.hasError("minlength")) ? 2 : -1);
  }
}
function LoginComponent_Conditional_17_Template(rf, ctx) {
  if (rf & 1) {
    i03.\u0275\u0275elementStart(0, "div", 10);
    i03.\u0275\u0275text(1);
    i03.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i03.\u0275\u0275nextContext();
    i03.\u0275\u0275advance();
    i03.\u0275\u0275textInterpolate1(" ", ctx_r0.errorMsg, " ");
  }
}
var _LoginComponent = class _LoginComponent {
  constructor(http, router, storageService, userService) {
    this.http = http;
    this.router = router;
    this.storageService = storageService;
    this.userService = userService;
    this.error = false;
    this.showError = false;
    this.errorMsg = "";
    this.loginForm = new FormGroup({
      email: new FormControl("", [Validators.required, Validators.email]),
      password: new FormControl("", [
        Validators.required,
        Validators.minLength(8)
      ])
    });
    this._loginUrl = "http://localhost:3000/api/auth/login";
  }
  loginUser() {
    if (this.loginForm.valid) {
      this.error = false;
      this.http.post(this._loginUrl, this.loginForm.value).subscribe((res) => {
        this.storageService.setToken(res.token);
        this.userService.setUser();
        this.router.navigateByUrl("Quiz");
      }, (err) => {
        this.errorMsg = err.error.error;
        this.showError = true;
      });
    } else {
      this.error = true;
    }
  }
};
_LoginComponent.\u0275fac = function LoginComponent_Factory(t) {
  return new (t || _LoginComponent)(i03.\u0275\u0275directiveInject(i1.HttpClient), i03.\u0275\u0275directiveInject(i22.Router), i03.\u0275\u0275directiveInject(StorageService), i03.\u0275\u0275directiveInject(UserService));
};
_LoginComponent.\u0275cmp = /* @__PURE__ */ i03.\u0275\u0275defineComponent({ type: _LoginComponent, selectors: [["app-login"]], inputs: { changePage: "changePage", login: "login" }, standalone: true, features: [i03.\u0275\u0275StandaloneFeature], decls: 23, vars: 4, consts: [[1, "flex", "flex-col", "gap-5", "text-xl", "mx-auto", "justify-center", "items-center", "w-full"], ["src", "assets/loginLogo.png", "alt", ""], [1, "text-center", "text-gray-500"], [1, "xl:min-w-[600px]", "min-w-full", "px-8", "mt-10", 3, "formGroup"], [1, "relative", "border", "border-[#C1BBBB]"], ["type", "email", "id", "email", "placeholder", " ", "formControlName", "email", 1, "block", "px-2.5", "pb-2.5", "pt-5", "w-full", "font-semibold", "text-lg", "focus:border-l-2", "focus:border-[#fcc822]", "appearance-none", "focus:outline-none", "focus:ring-0", "peer", "text-sun"], ["for", "email", 1, "absolute", "text-base", "text-gray-500", "duration-300", "transform", "-translate-y-4", "scale-75", "top-4", "z-10", "origin-[0]", "start-2.5", "peer-placeholder-shown:scale-100", "peer-placeholder-shown:translate-y-0", "peer-focus:scale-75", "peer-focus:-translate-y-4", "rtl:peer-focus:translate-x-1/4", "rtl:peer-focus:left-auto", "cursor-text"], [1, "text-red-600", "text-sm"], ["type", "password", "id", "password", "placeholder", " ", "formControlName", "password", 1, "block", "px-2.5", "pb-2.5", "pt-5", "w-full", "font-semibold", "text-lg", "focus:border-l-2", "focus:border-[#fcc822]", "appearance-none", "focus:outline-none", "focus:ring-0", "peer", "text-sun"], ["for", "password", 1, "absolute", "text-base", "text-gray-500", "duration-300", "transform", "-translate-y-4", "scale-75", "top-4", "z-10", "origin-[0]", "start-2.5", "peer-placeholder-shown:scale-100", "peer-placeholder-shown:translate-y-0", "peer-focus:scale-75", "peer-focus:-translate-y-4", "rtl:peer-focus:translate-x-1/4", "rtl:peer-focus:left-auto", "cursor-text"], [1, "border", "rounded-md", "mt-8", "fixed", "border-red-500", "bg-red-100", "text-red-500", "p-3", "text-sm"], [1, "sm:mt-28", "mt-20", "flex", "sm:gap-10", "gap-2"], ["type", "submit", 1, "btn-fill-sun", 3, "click"], [1, "btn-sun", "my-auto", 2, "padding", "15px", 3, "click"], [1, "text-danger"]], template: function LoginComponent_Template(rf, ctx) {
  if (rf & 1) {
    i03.\u0275\u0275elementStart(0, "div", 0);
    i03.\u0275\u0275element(1, "img", 1);
    i03.\u0275\u0275elementStart(2, "p", 2);
    i03.\u0275\u0275text(3, " Welcome back! ");
    i03.\u0275\u0275element(4, "br");
    i03.\u0275\u0275text(5, " Please Login to your account. ");
    i03.\u0275\u0275elementEnd();
    i03.\u0275\u0275elementStart(6, "form", 3)(7, "div", 4);
    i03.\u0275\u0275element(8, "input", 5);
    i03.\u0275\u0275elementStart(9, "label", 6);
    i03.\u0275\u0275text(10, "Email Address");
    i03.\u0275\u0275elementEnd()();
    i03.\u0275\u0275template(11, LoginComponent_Conditional_11_Template, 3, 2, "div", 7);
    i03.\u0275\u0275elementStart(12, "div", 4);
    i03.\u0275\u0275element(13, "input", 8);
    i03.\u0275\u0275elementStart(14, "label", 9);
    i03.\u0275\u0275text(15, "Password");
    i03.\u0275\u0275elementEnd()();
    i03.\u0275\u0275template(16, LoginComponent_Conditional_16_Template, 3, 2, "div", 7)(17, LoginComponent_Conditional_17_Template, 2, 1, "div", 10);
    i03.\u0275\u0275elementStart(18, "div", 11)(19, "button", 12);
    i03.\u0275\u0275listener("click", function LoginComponent_Template_button_click_19_listener($event) {
      $event.preventDefault();
      return ctx.loginUser();
    });
    i03.\u0275\u0275text(20, " Login ");
    i03.\u0275\u0275elementEnd();
    i03.\u0275\u0275elementStart(21, "button", 13);
    i03.\u0275\u0275listener("click", function LoginComponent_Template_button_click_21_listener() {
      return ctx.changePage();
    });
    i03.\u0275\u0275text(22, " Sign up ");
    i03.\u0275\u0275elementEnd()()()();
  }
  if (rf & 2) {
    let tmp_1_0;
    let tmp_2_0;
    i03.\u0275\u0275advance(6);
    i03.\u0275\u0275property("formGroup", ctx.loginForm);
    i03.\u0275\u0275advance(5);
    i03.\u0275\u0275conditional(11, ctx.error || ((tmp_1_0 = ctx.loginForm.get("email")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.loginForm.get("email")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.loginForm.get("email")) == null ? null : tmp_1_0.touched)) ? 11 : -1);
    i03.\u0275\u0275advance(5);
    i03.\u0275\u0275conditional(16, ctx.error || ((tmp_2_0 = ctx.loginForm.get("password")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.loginForm.get("password")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.loginForm.get("password")) == null ? null : tmp_2_0.touched)) ? 16 : -1);
    i03.\u0275\u0275advance();
    i03.\u0275\u0275conditional(17, ctx.showError ? 17 : -1);
  }
}, dependencies: [FormsModule, i5.\u0275NgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, ReactiveFormsModule, i5.FormGroupDirective, i5.FormControlName] });
var LoginComponent = _LoginComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i03.\u0275setClassDebugInfo(LoginComponent, { className: "LoginComponent", filePath: "src\\app\\components\\auth\\login\\login.component.ts", lineNumber: 20 });
})();

// src/app/components/auth/sign-up/sign-up.component.ts
import { Component as Component2, Input as Input2 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { FormControl as FormControl2, Validators as Validators2, FormsModule as FormsModule2, ReactiveFormsModule as ReactiveFormsModule2, FormGroup as FormGroup2 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_forms.js?v=7f891212";
import * as i04 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i12 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import * as i23 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
import * as i52 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_forms.js?v=7f891212";
function SignUpComponent_Conditional_11_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "small");
    i04.\u0275\u0275text(1, " This field is required. ");
    i04.\u0275\u0275elementEnd();
  }
}
function SignUpComponent_Conditional_11_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "div", 7);
    i04.\u0275\u0275template(1, SignUpComponent_Conditional_11_Conditional_1_Template, 2, 0, "small");
    i04.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    let tmp_1_0;
    const ctx_r0 = i04.\u0275\u0275nextContext();
    i04.\u0275\u0275advance();
    i04.\u0275\u0275conditional(1, ((tmp_1_0 = ctx_r0.signUpForm.get("fullName")) == null ? null : tmp_1_0.hasError("required")) ? 1 : -1);
  }
}
function SignUpComponent_Conditional_16_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "small");
    i04.\u0275\u0275text(1, " This field is required. ");
    i04.\u0275\u0275elementEnd();
  }
}
function SignUpComponent_Conditional_16_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "small", 18);
    i04.\u0275\u0275text(1, " Please enter a correct email! ");
    i04.\u0275\u0275elementEnd();
  }
}
function SignUpComponent_Conditional_16_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "div", 7);
    i04.\u0275\u0275template(1, SignUpComponent_Conditional_16_Conditional_1_Template, 2, 0, "small")(2, SignUpComponent_Conditional_16_Conditional_2_Template, 2, 0, "small", 18);
    i04.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    let tmp_1_0;
    let tmp_2_0;
    const ctx_r0 = i04.\u0275\u0275nextContext();
    i04.\u0275\u0275advance();
    i04.\u0275\u0275conditional(1, ((tmp_1_0 = ctx_r0.signUpForm.get("email")) == null ? null : tmp_1_0.hasError("required")) ? 1 : -1);
    i04.\u0275\u0275advance();
    i04.\u0275\u0275conditional(2, ((tmp_2_0 = ctx_r0.signUpForm.get("email")) == null ? null : tmp_2_0.hasError("email")) ? 2 : -1);
  }
}
function SignUpComponent_Conditional_21_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "small");
    i04.\u0275\u0275text(1, " This field is required. ");
    i04.\u0275\u0275elementEnd();
  }
}
function SignUpComponent_Conditional_21_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "small", 18);
    i04.\u0275\u0275text(1, " Password must be at least 8 characters! ");
    i04.\u0275\u0275elementEnd();
  }
}
function SignUpComponent_Conditional_21_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "div", 7);
    i04.\u0275\u0275template(1, SignUpComponent_Conditional_21_Conditional_1_Template, 2, 0, "small")(2, SignUpComponent_Conditional_21_Conditional_2_Template, 2, 0, "small", 18);
    i04.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    let tmp_1_0;
    let tmp_2_0;
    const ctx_r0 = i04.\u0275\u0275nextContext();
    i04.\u0275\u0275advance();
    i04.\u0275\u0275conditional(1, ((tmp_1_0 = ctx_r0.signUpForm.get("password")) == null ? null : tmp_1_0.hasError("required")) ? 1 : -1);
    i04.\u0275\u0275advance();
    i04.\u0275\u0275conditional(2, ((tmp_2_0 = ctx_r0.signUpForm.get("password")) == null ? null : tmp_2_0.hasError("minlength")) ? 2 : -1);
  }
}
function SignUpComponent_Conditional_26_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "small");
    i04.\u0275\u0275text(1, " This field is required. ");
    i04.\u0275\u0275elementEnd();
  }
}
function SignUpComponent_Conditional_26_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "div", 7);
    i04.\u0275\u0275template(1, SignUpComponent_Conditional_26_Conditional_1_Template, 2, 0, "small");
    i04.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    let tmp_1_0;
    const ctx_r0 = i04.\u0275\u0275nextContext();
    i04.\u0275\u0275advance();
    i04.\u0275\u0275conditional(1, ((tmp_1_0 = ctx_r0.signUpForm.get("ConfirmPassword")) == null ? null : tmp_1_0.hasError("required")) ? 1 : -1);
  }
}
function SignUpComponent_Conditional_27_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "div", 7)(1, "small");
    i04.\u0275\u0275text(2, " Password Does not match ");
    i04.\u0275\u0275elementEnd()();
  }
}
function SignUpComponent_Conditional_28_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "div", 14);
    i04.\u0275\u0275text(1);
    i04.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i04.\u0275\u0275nextContext();
    i04.\u0275\u0275advance();
    i04.\u0275\u0275textInterpolate1(" ", ctx_r0.errorMsg, " ");
  }
}
var _SignUpComponent = class _SignUpComponent {
  constructor(http, router, storageService, userService) {
    this.http = http;
    this.router = router;
    this.storageService = storageService;
    this.userService = userService;
    this.passwordMatch = true;
    this.error = false;
    this.showError = false;
    this.errorMsg = "";
    this._signupUrl = "http://localhost:3000/api/auth/signup";
    this.signUpForm = new FormGroup2({
      email: new FormControl2("", [Validators2.required, Validators2.email]),
      fullName: new FormControl2("", [Validators2.required]),
      password: new FormControl2("", [
        Validators2.required,
        Validators2.minLength(8)
      ]),
      ConfirmPassword: new FormControl2("", [
        Validators2.required,
        Validators2.minLength(8)
      ])
    });
  }
  onChange() {
    if (this.signUpForm.value.password !== this.signUpForm.value.ConfirmPassword && this.signUpForm.get("ConfirmPassword")?.dirty) {
      this.passwordMatch = false;
    } else {
      this.passwordMatch = true;
    }
  }
  signupUser() {
    if (this.signUpForm.valid && this.passwordMatch) {
      this.error = false;
      const payload = {
        fullName: this.signUpForm.value.fullName,
        email: this.signUpForm.value.email,
        password: this.signUpForm.value.password
      };
      this.http.post(this._signupUrl, payload).subscribe((res) => {
        this.storageService.setToken(res.token);
        this.userService.setUser();
        this.router.navigateByUrl("Quiz");
      }, (err) => {
        this.errorMsg = err.error.error;
        this.showError = true;
      });
    } else {
      this.error = true;
    }
  }
};
_SignUpComponent.\u0275fac = function SignUpComponent_Factory(t) {
  return new (t || _SignUpComponent)(i04.\u0275\u0275directiveInject(i12.HttpClient), i04.\u0275\u0275directiveInject(i23.Router), i04.\u0275\u0275directiveInject(StorageService), i04.\u0275\u0275directiveInject(UserService));
};
_SignUpComponent.\u0275cmp = /* @__PURE__ */ i04.\u0275\u0275defineComponent({ type: _SignUpComponent, selectors: [["sign-up"]], inputs: { changePage: "changePage", signup: "signup" }, standalone: true, features: [i04.\u0275\u0275StandaloneFeature], decls: 34, vars: 7, consts: [[1, "flex", "flex-col", "gap-5", "text-xl", "mx-auto", "justify-center", "items-center", "w-full"], ["src", "assets/loginLogo.png", "alt", ""], [1, "text-center", "text-gray-500"], [1, "xl:min-w-[600px]", "min-w-full", "px-8", "mt-10", 3, "formGroup"], [1, "relative", "border", "border-[#C1BBBB]"], ["type", "text", "id", "fullName", "placeholder", " ", "formControlName", "fullName", 1, "block", "px-2.5", "pb-2.5", "pt-5", "w-full", "font-semibold", "text-lg", "focus:border-l-2", "focus:border-[#fcc822]", "appearance-none", "focus:outline-none", "focus:ring-0", "peer", "text-sun"], ["for", "fullName", 1, "absolute", "text-base", "text-gray-500", "duration-300", "transform", "-translate-y-4", "scale-75", "top-4", "z-10", "origin-[0]", "start-2.5", "peer-placeholder-shown:scale-100", "peer-placeholder-shown:translate-y-0", "peer-focus:scale-75", "peer-focus:-translate-y-4", "rtl:peer-focus:translate-x-1/4", "rtl:peer-focus:left-auto", "cursor-text"], [1, "text-red-600", "text-sm"], ["type", "email", "id", "email", "placeholder", " ", "formControlName", "email", 1, "block", "px-2.5", "pb-2.5", "pt-5", "w-full", "font-semibold", "text-lg", "focus:border-l-2", "focus:border-[#fcc822]", "appearance-none", "focus:outline-none", "focus:ring-0", "peer", "text-sun"], ["for", "email", 1, "absolute", "text-base", "text-gray-500", "duration-300", "transform", "-translate-y-4", "scale-75", "top-4", "z-10", "origin-[0]", "start-2.5", "peer-placeholder-shown:scale-100", "peer-placeholder-shown:translate-y-0", "peer-focus:scale-75", "peer-focus:-translate-y-4", "rtl:peer-focus:translate-x-1/4", "rtl:peer-focus:left-auto", "cursor-text"], ["type", "password", "id", "password", "placeholder", " ", "formControlName", "password", 1, "block", "px-2.5", "pb-2.5", "pt-5", "w-full", "font-semibold", "text-lg", "focus:border-l-2", "focus:border-[#fcc822]", "appearance-none", "focus:outline-none", "focus:ring-0", "peer", "text-sun"], ["for", "password", 1, "absolute", "text-base", "text-gray-500", "duration-300", "transform", "-translate-y-4", "scale-75", "top-4", "z-10", "origin-[0]", "start-2.5", "peer-placeholder-shown:scale-100", "peer-placeholder-shown:translate-y-0", "peer-focus:scale-75", "peer-focus:-translate-y-4", "rtl:peer-focus:translate-x-1/4", "rtl:peer-focus:left-auto", "cursor-text"], ["type", "password", "id", "ConfirmPassword", "placeholder", " ", "formControlName", "ConfirmPassword", 1, "block", "px-2.5", "pb-2.5", "pt-5", "w-full", "font-semibold", "text-lg", "focus:border-l-2", "focus:border-[#fcc822]", "appearance-none", "focus:outline-none", "focus:ring-0", "peer", "text-sun", 3, "change"], ["for", "ConfirmPassword", 1, "absolute", "text-base", "text-gray-500", "duration-300", "transform", "-translate-y-4", "scale-75", "top-4", "z-10", "origin-[0]", "start-2.5", "peer-placeholder-shown:scale-100", "peer-placeholder-shown:translate-y-0", "peer-focus:scale-75", "peer-focus:-translate-y-4", "rtl:peer-focus:translate-x-1/4", "rtl:peer-focus:left-auto", "cursor-text"], [1, "border", "rounded-md", "mt-8", "fixed", "border-red-500", "bg-red-100", "text-red-500", "p-3", "text-sm"], [1, "sm:mt-28", "mt-20", "flex", "sm:gap-10", "gap-2"], ["type", "submit", 1, "btn-fill-sun", "my-auto", 2, "padding", "15px", 3, "click"], [1, "btn-sun", 3, "click"], [1, "text-danger"]], template: function SignUpComponent_Template(rf, ctx) {
  if (rf & 1) {
    i04.\u0275\u0275elementStart(0, "div", 0);
    i04.\u0275\u0275element(1, "img", 1);
    i04.\u0275\u0275elementStart(2, "p", 2);
    i04.\u0275\u0275text(3, " Welcome ");
    i04.\u0275\u0275element(4, "br");
    i04.\u0275\u0275text(5, " Please create your account. ");
    i04.\u0275\u0275elementEnd();
    i04.\u0275\u0275elementStart(6, "form", 3)(7, "div", 4);
    i04.\u0275\u0275element(8, "input", 5);
    i04.\u0275\u0275elementStart(9, "label", 6);
    i04.\u0275\u0275text(10, "Full Name");
    i04.\u0275\u0275elementEnd()();
    i04.\u0275\u0275template(11, SignUpComponent_Conditional_11_Template, 2, 1, "div", 7);
    i04.\u0275\u0275elementStart(12, "div", 4);
    i04.\u0275\u0275element(13, "input", 8);
    i04.\u0275\u0275elementStart(14, "label", 9);
    i04.\u0275\u0275text(15, "Email Address");
    i04.\u0275\u0275elementEnd()();
    i04.\u0275\u0275template(16, SignUpComponent_Conditional_16_Template, 3, 2, "div", 7);
    i04.\u0275\u0275elementStart(17, "div", 4);
    i04.\u0275\u0275element(18, "input", 10);
    i04.\u0275\u0275elementStart(19, "label", 11);
    i04.\u0275\u0275text(20, "Password");
    i04.\u0275\u0275elementEnd()();
    i04.\u0275\u0275template(21, SignUpComponent_Conditional_21_Template, 3, 2, "div", 7);
    i04.\u0275\u0275elementStart(22, "div", 4)(23, "input", 12);
    i04.\u0275\u0275listener("change", function SignUpComponent_Template_input_change_23_listener() {
      return ctx.onChange();
    });
    i04.\u0275\u0275elementEnd();
    i04.\u0275\u0275elementStart(24, "label", 13);
    i04.\u0275\u0275text(25, "Confirm Password");
    i04.\u0275\u0275elementEnd()();
    i04.\u0275\u0275template(26, SignUpComponent_Conditional_26_Template, 2, 1, "div", 7)(27, SignUpComponent_Conditional_27_Template, 3, 0, "div", 7)(28, SignUpComponent_Conditional_28_Template, 2, 1, "div", 14);
    i04.\u0275\u0275elementStart(29, "div", 15)(30, "button", 16);
    i04.\u0275\u0275listener("click", function SignUpComponent_Template_button_click_30_listener($event) {
      $event.preventDefault();
      return ctx.signupUser();
    });
    i04.\u0275\u0275text(31, " Sign up ");
    i04.\u0275\u0275elementEnd();
    i04.\u0275\u0275elementStart(32, "button", 17);
    i04.\u0275\u0275listener("click", function SignUpComponent_Template_button_click_32_listener() {
      return ctx.changePage();
    });
    i04.\u0275\u0275text(33, " Login ");
    i04.\u0275\u0275elementEnd()()()();
  }
  if (rf & 2) {
    let tmp_1_0;
    let tmp_2_0;
    let tmp_3_0;
    let tmp_4_0;
    i04.\u0275\u0275advance(6);
    i04.\u0275\u0275property("formGroup", ctx.signUpForm);
    i04.\u0275\u0275advance(5);
    i04.\u0275\u0275conditional(11, ctx.error || ((tmp_1_0 = ctx.signUpForm.get("fullName")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.signUpForm.get("fullName")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.signUpForm.get("fullName")) == null ? null : tmp_1_0.touched)) ? 11 : -1);
    i04.\u0275\u0275advance(5);
    i04.\u0275\u0275conditional(16, ctx.error || ((tmp_2_0 = ctx.signUpForm.get("email")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.signUpForm.get("email")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.signUpForm.get("email")) == null ? null : tmp_2_0.touched)) ? 16 : -1);
    i04.\u0275\u0275advance(5);
    i04.\u0275\u0275conditional(21, ctx.error || ((tmp_3_0 = ctx.signUpForm.get("password")) == null ? null : tmp_3_0.invalid) && (((tmp_3_0 = ctx.signUpForm.get("password")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.signUpForm.get("password")) == null ? null : tmp_3_0.touched)) ? 21 : -1);
    i04.\u0275\u0275advance(5);
    i04.\u0275\u0275conditional(26, ctx.error || ((tmp_4_0 = ctx.signUpForm.get("ConfirmPassword")) == null ? null : tmp_4_0.invalid) && (((tmp_4_0 = ctx.signUpForm.get("ConfirmPassword")) == null ? null : tmp_4_0.dirty) || ((tmp_4_0 = ctx.signUpForm.get("ConfirmPassword")) == null ? null : tmp_4_0.touched)) ? 26 : -1);
    i04.\u0275\u0275advance();
    i04.\u0275\u0275conditional(27, !ctx.passwordMatch ? 27 : -1);
    i04.\u0275\u0275advance();
    i04.\u0275\u0275conditional(28, ctx.showError ? 28 : -1);
  }
}, dependencies: [ReactiveFormsModule2, i52.\u0275NgNoValidate, i52.DefaultValueAccessor, i52.NgControlStatus, i52.NgControlStatusGroup, i52.FormGroupDirective, i52.FormControlName, FormsModule2] });
var SignUpComponent = _SignUpComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i04.\u0275setClassDebugInfo(SignUpComponent, { className: "SignUpComponent", filePath: "src\\app\\components\\auth\\sign-up\\sign-up.component.ts", lineNumber: 22 });
})();

// src/app/components/auth/auth.component.ts
import * as i05 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
function AuthComponent_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    i05.\u0275\u0275element(0, "app-login", 1);
  }
  if (rf & 2) {
    const ctx_r0 = i05.\u0275\u0275nextContext();
    i05.\u0275\u0275property("changePage", ctx_r0.changePage);
  }
}
function AuthComponent_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    i05.\u0275\u0275element(0, "sign-up", 4);
  }
  if (rf & 2) {
    const ctx_r0 = i05.\u0275\u0275nextContext();
    i05.\u0275\u0275property("changePage", ctx_r0.changePage);
  }
}
var _AuthComponent = class _AuthComponent {
  constructor() {
    this.switch = "login";
    this.changePage = () => {
      if (this.switch === "login")
        this.switch = "signup";
      else if (this.switch === "signup")
        this.switch = "login";
    };
  }
  loggedIn() {
    return !!localStorage.getItem("token");
  }
};
_AuthComponent.\u0275fac = function AuthComponent_Factory(t) {
  return new (t || _AuthComponent)();
};
_AuthComponent.\u0275cmp = /* @__PURE__ */ i05.\u0275\u0275defineComponent({ type: _AuthComponent, selectors: [["app-auth"]], standalone: true, features: [i05.\u0275\u0275StandaloneFeature], decls: 5, vars: 2, consts: [[1, "lg:grid", "lg:grid-cols-2", "flex", "h-full", "justify-center", "items-center", "w-full"], [1, "w-full", 3, "changePage"], [3, "className"], ["src", "assets/car.png", "alt", "", 1, "mx-auto"], [1, "w-full", "lg:translate-x-full", 3, "changePage"]], template: function AuthComponent_Template(rf, ctx) {
  if (rf & 1) {
    i05.\u0275\u0275elementStart(0, "div", 0);
    i05.\u0275\u0275template(1, AuthComponent_Conditional_1_Template, 1, 1, "app-login", 1)(2, AuthComponent_Conditional_2_Template, 1, 1);
    i05.\u0275\u0275elementStart(3, "div", 2);
    i05.\u0275\u0275element(4, "img", 3);
    i05.\u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    i05.\u0275\u0275advance();
    i05.\u0275\u0275conditional(1, ctx.switch === "login" ? 1 : ctx.switch === "signup" ? 2 : -1);
    i05.\u0275\u0275advance(2);
    i05.\u0275\u0275property("className", ctx.switch === "login" ? "bg-[#fafafa] h-full items-center lg:flex hidden transform transition-transform duration-500 ease-in-out" : "bg-[#fafafa] h-full items-center lg:flex hidden transform transition-transform duration-500 ease-in-out -translate-x-full");
  }
}, dependencies: [FormsModule3, ReactiveFormsModule3, LoginComponent, SignUpComponent] });
var AuthComponent = _AuthComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i05.\u0275setClassDebugInfo(AuthComponent, { className: "AuthComponent", filePath: "src\\app\\components\\auth\\auth.component.ts", lineNumber: 22 });
})();

// src/app/components/home/home.component.ts
import { Component as Component7 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { RouterOutlet } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";

// src/app/components/nav-bar/nav-bar.component.ts
import { Component as Component5 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { RouterModule as RouterModule2 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";

// src/app/components/nav-bar/profile/profile.component.ts
import { Component as Component4 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { MatMenuModule } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_menu.js?v=7f891212";
import { MatButtonModule } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_button.js?v=7f891212";
import { RouterModule } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
import * as i06 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i13 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
import * as i4 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_menu.js?v=7f891212";
var _ProfileComponent = class _ProfileComponent {
  constructor(router, storageService, userService) {
    this.router = router;
    this.storageService = storageService;
    this.userService = userService;
  }
  ngOnInit() {
    this.userService.getUser().subscribe((user) => {
      this.user = user;
    });
  }
  logout() {
    this.storageService.removeToken();
    this.userService.removeUser();
    this.router.navigateByUrl("/");
  }
};
_ProfileComponent.\u0275fac = function ProfileComponent_Factory(t) {
  return new (t || _ProfileComponent)(i06.\u0275\u0275directiveInject(i13.Router), i06.\u0275\u0275directiveInject(StorageService), i06.\u0275\u0275directiveInject(UserService));
};
_ProfileComponent.\u0275cmp = /* @__PURE__ */ i06.\u0275\u0275defineComponent({ type: _ProfileComponent, selectors: [["profile"]], standalone: true, features: [i06.\u0275\u0275StandaloneFeature], decls: 15, vars: 3, consts: [["menu", "matMenu"], [1, "flex", "sm:gap-1", "gap-0.5", "items-center", "justify-center"], ["src", "assets/profile.png", "alt", "profile", 1, "sm:w-fit", "w-4"], [3, "matMenuTriggerFor"], [1, "text-sun", "inline", "sm:text-lg"], ["src", "assets/down.png", "alt", "down", 1, "inline", "sm:ml-2", "ml-0.5", "w-2", "sm:w-fit"], [1, "p-1", "text-gray-400", "flex", "items-center", "gap-2", "hover:bg-gray-100", "rounded-lg", 3, "routerLink"], ["src", "assets/settings.png", "alt", ""], [1, "h-0.5", "bg-gray-200", "w-full", "my-1"], [1, "p-1", "text-sun", "font-semibold", "flex", "items-center", "gap-2", "hover:bg-[#fdf6e0]", "rounded-lg", "w-full", 3, "click"], ["src", "assets/logout.png", "alt", ""]], template: function ProfileComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i06.\u0275\u0275getCurrentView();
    i06.\u0275\u0275elementStart(0, "div", 1);
    i06.\u0275\u0275element(1, "img", 2);
    i06.\u0275\u0275elementStart(2, "button", 3)(3, "span", 4);
    i06.\u0275\u0275text(4);
    i06.\u0275\u0275elementEnd();
    i06.\u0275\u0275element(5, "img", 5);
    i06.\u0275\u0275elementEnd();
    i06.\u0275\u0275elementStart(6, "mat-menu", null, 0)(8, "a", 6);
    i06.\u0275\u0275element(9, "img", 7);
    i06.\u0275\u0275text(10, " Settings");
    i06.\u0275\u0275elementEnd();
    i06.\u0275\u0275element(11, "div", 8);
    i06.\u0275\u0275elementStart(12, "button", 9);
    i06.\u0275\u0275listener("click", function ProfileComponent_Template_button_click_12_listener() {
      i06.\u0275\u0275restoreView(_r1);
      return i06.\u0275\u0275resetView(ctx.logout());
    });
    i06.\u0275\u0275element(13, "img", 10);
    i06.\u0275\u0275text(14, " Logout");
    i06.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const menu_r2 = i06.\u0275\u0275reference(7);
    i06.\u0275\u0275advance(2);
    i06.\u0275\u0275property("matMenuTriggerFor", menu_r2);
    i06.\u0275\u0275advance(2);
    i06.\u0275\u0275textInterpolate(ctx.user == null ? null : ctx.user.user.fullName);
    i06.\u0275\u0275advance(4);
    i06.\u0275\u0275property("routerLink", "settings");
  }
}, dependencies: [MatButtonModule, MatMenuModule, i4.MatMenu, i4.MatMenuTrigger, RouterModule, i13.RouterLink] });
var ProfileComponent = _ProfileComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i06.\u0275setClassDebugInfo(ProfileComponent, { className: "ProfileComponent", filePath: "src\\app\\components\\nav-bar\\profile\\profile.component.ts", lineNumber: 14 });
})();

// src/app/components/nav-bar/nav-bar.component.ts
import * as i07 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i14 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
function NavBarComponent_Conditional_9_Template(rf, ctx) {
  if (rf & 1) {
    i07.\u0275\u0275elementStart(0, "a", 7);
    i07.\u0275\u0275text(1, " Login ");
    i07.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    i07.\u0275\u0275property("routerLink", "/Login");
  }
}
function NavBarComponent_Conditional_10_Template(rf, ctx) {
  if (rf & 1) {
    i07.\u0275\u0275element(0, "profile");
  }
}
var _NavBarComponent = class _NavBarComponent {
  constructor(router, storageService, userService) {
    this.router = router;
    this.storageService = storageService;
    this.userService = userService;
    this.authenticated = !this.storageService.getToken();
    this.settings = false;
  }
  ngOnInit() {
    this.storageService.watchToken().subscribe((token) => {
      this.authenticated = !this.storageService.getToken();
    });
    this.userService.setUser();
  }
};
_NavBarComponent.\u0275fac = function NavBarComponent_Factory(t) {
  return new (t || _NavBarComponent)(i07.\u0275\u0275directiveInject(i14.Router), i07.\u0275\u0275directiveInject(StorageService), i07.\u0275\u0275directiveInject(UserService));
};
_NavBarComponent.\u0275cmp = /* @__PURE__ */ i07.\u0275\u0275defineComponent({ type: _NavBarComponent, selectors: [["nav-bar"]], standalone: true, features: [i07.\u0275\u0275StandaloneFeature], decls: 11, vars: 2, consts: [[1, "flex", "justify-between", "items-center", "sm:p-8", "p-4", "border-b", "border-b-[#ECECE8]", "sm:text-xl", "text-sm", "font-bold", "sm:font-normal", "gap-3"], [1, "flex", "sm:gap-10", "gap-3"], ["routerLink", ""], ["src", "assets/logo.png", "alt", "logo"], [1, "flex", "items-center", "sm:gap-10", "gap-3", "sm:font-medium", "font-bold"], [1, "text-[#c0c0c0]", 3, "routerLink"], [1, "block", "sm:hidden"], [1, "btn-sun", 3, "routerLink"]], template: function NavBarComponent_Template(rf, ctx) {
  if (rf & 1) {
    i07.\u0275\u0275elementStart(0, "nav", 0)(1, "div", 1)(2, "a", 2);
    i07.\u0275\u0275element(3, "img", 3);
    i07.\u0275\u0275elementEnd()();
    i07.\u0275\u0275elementStart(4, "div", 4)(5, "a", 5);
    i07.\u0275\u0275text(6, " How it ");
    i07.\u0275\u0275element(7, "br", 6);
    i07.\u0275\u0275text(8, " works? ");
    i07.\u0275\u0275elementEnd();
    i07.\u0275\u0275template(9, NavBarComponent_Conditional_9_Template, 2, 1, "a", 7)(10, NavBarComponent_Conditional_10_Template, 1, 0);
    i07.\u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    i07.\u0275\u0275advance(5);
    i07.\u0275\u0275property("routerLink", "/HowItWorks");
    i07.\u0275\u0275advance(4);
    i07.\u0275\u0275conditional(9, ctx.authenticated ? 9 : 10);
  }
}, dependencies: [RouterModule2, i14.RouterLink, ProfileComponent] });
var NavBarComponent = _NavBarComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i07.\u0275setClassDebugInfo(NavBarComponent, { className: "NavBarComponent", filePath: "src\\app\\components\\nav-bar\\nav-bar.component.ts", lineNumber: 28 });
})();

// src/app/components/landing-page/landing-page.component.ts
import { Component as Component6 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { RouterModule as RouterModule3 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
import * as i08 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i15 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
var _LandingPageComponent = class _LandingPageComponent {
};
_LandingPageComponent.\u0275fac = function LandingPageComponent_Factory(t) {
  return new (t || _LandingPageComponent)();
};
_LandingPageComponent.\u0275cmp = /* @__PURE__ */ i08.\u0275\u0275defineComponent({ type: _LandingPageComponent, selectors: [["landing-page"]], standalone: true, features: [i08.\u0275\u0275StandaloneFeature], decls: 17, vars: 2, consts: [[1, "grid", "lg:grid-cols-2", "lg:mt-0", "mt-10", "items-center", "h-full", "sm:text-start", "text-center"], [1, "flex", "flex-col", "gap-10", "mx-auto"], [1, "2xl:text-8xl", "xl:text-7xl", "sm:text-6xl", "min-[350px]:text-5xl", "text-4xl", "font-semibold"], [1, "border-l", "border-l-[#333333]", "px-5", "xl:text-2xl", "min-[350px]:text-xl", "text-lg", "text-[#828282]"], [1, "flex", "max-[350px]:flex-col", "gap-5", "min-[350px]:text-xl", "font-medium", "mt-10", "mx-auto", "sm:mx-0"], [1, "btn-fill-sun", 3, "routerLink"], [1, "flex", "gap-2", "items-center", "justify-center", "text-sun", 3, "routerLink"], ["src", "assets/right.png", "alt", "", 1, "w-3", "mt-1"], ["src", "assets/landingPage.png", "alt", "landing Page Photo", 1, "mx-auto"]], template: function LandingPageComponent_Template(rf, ctx) {
  if (rf & 1) {
    i08.\u0275\u0275elementStart(0, "div", 0)(1, "div", 1)(2, "p", 2);
    i08.\u0275\u0275text(3, " Your Key ");
    i08.\u0275\u0275element(4, "br");
    i08.\u0275\u0275text(5, " to Knowing ");
    i08.\u0275\u0275element(6, "br");
    i08.\u0275\u0275text(7, " Used Car Prices ");
    i08.\u0275\u0275elementEnd();
    i08.\u0275\u0275elementStart(8, "p", 3);
    i08.\u0275\u0275text(9, "We Help You Discover the Real Value of Your Car");
    i08.\u0275\u0275elementEnd();
    i08.\u0275\u0275elementStart(10, "div", 4)(11, "a", 5);
    i08.\u0275\u0275text(12, "Find Out Now!");
    i08.\u0275\u0275elementEnd();
    i08.\u0275\u0275elementStart(13, "a", 6);
    i08.\u0275\u0275text(14, "Know more ");
    i08.\u0275\u0275element(15, "img", 7);
    i08.\u0275\u0275elementEnd()()();
    i08.\u0275\u0275element(16, "img", 8);
    i08.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    i08.\u0275\u0275advance(11);
    i08.\u0275\u0275property("routerLink", "Quiz");
    i08.\u0275\u0275advance(2);
    i08.\u0275\u0275property("routerLink", "HowItWorks");
  }
}, dependencies: [RouterModule3, i15.RouterLink] });
var LandingPageComponent = _LandingPageComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i08.\u0275setClassDebugInfo(LandingPageComponent, { className: "LandingPageComponent", filePath: "src\\app\\components\\landing-page\\landing-page.component.ts", lineNumber: 11 });
})();

// src/app/components/home/home.component.ts
import * as i09 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
var _HomeComponent = class _HomeComponent {
};
_HomeComponent.\u0275fac = function HomeComponent_Factory(t) {
  return new (t || _HomeComponent)();
};
_HomeComponent.\u0275cmp = /* @__PURE__ */ i09.\u0275\u0275defineComponent({ type: _HomeComponent, selectors: [["app-home"]], standalone: true, features: [i09.\u0275\u0275StandaloneFeature], decls: 6, vars: 0, consts: [[1, "app-root"], [1, "nav-bar"], [1, "content", "container", "mx-auto", "sm:px-5", "px-2"], [1, "footer"], ["src", "assets/snakeLine.png", "alt", "", 1, "min-[350px]:w-72", "w-52"]], template: function HomeComponent_Template(rf, ctx) {
  if (rf & 1) {
    i09.\u0275\u0275elementStart(0, "div", 0);
    i09.\u0275\u0275element(1, "nav-bar", 1);
    i09.\u0275\u0275elementStart(2, "section", 2);
    i09.\u0275\u0275element(3, "router-outlet");
    i09.\u0275\u0275elementEnd();
    i09.\u0275\u0275elementStart(4, "footer", 3);
    i09.\u0275\u0275element(5, "img", 4);
    i09.\u0275\u0275elementEnd()();
  }
}, dependencies: [RouterOutlet, NavBarComponent] });
var HomeComponent = _HomeComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i09.\u0275setClassDebugInfo(HomeComponent, { className: "HomeComponent", filePath: "src\\app\\components\\home\\home.component.ts", lineNumber: 13 });
})();

// src/app/components/how-it-works/how-it-works.component.ts
import { Component as Component8 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { RouterModule as RouterModule4 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
import * as i010 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i16 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
var _HowItWorksComponent = class _HowItWorksComponent {
};
_HowItWorksComponent.\u0275fac = function HowItWorksComponent_Factory(t) {
  return new (t || _HowItWorksComponent)();
};
_HowItWorksComponent.\u0275cmp = /* @__PURE__ */ i010.\u0275\u0275defineComponent({ type: _HowItWorksComponent, selectors: [["app-how-it-works"]], standalone: true, features: [i010.\u0275\u0275StandaloneFeature], decls: 11, vars: 1, consts: [[1, "flex", "flex-col", "gap-10", "sm:text-2xl", "min-[350px]:text-xl", "text-lg", "h-full", "mt-20", "sm:text-start", "text-center"], [1, "text-sun", "font-bold"], [1, "btn-fill-sun", "w-fit", "self-end", "sm:mx-0", "mx-auto", 3, "routerLink"]], template: function HowItWorksComponent_Template(rf, ctx) {
  if (rf & 1) {
    i010.\u0275\u0275elementStart(0, "div", 0)(1, "h1", 1);
    i010.\u0275\u0275text(2, '"Welcome to the Future of Car Valuation"');
    i010.\u0275\u0275elementEnd();
    i010.\u0275\u0275elementStart(3, "p");
    i010.\u0275\u0275text(4, " At QuizCars, we're transforming the way car owners and enthusiasts understand their vehicle's value. Our innovative platform is powered by a sophisticated model trained on extensive data, ensuring that every prediction we make is as accurate as possible. By answering a few simple questions about your car, you're not just providing us with information; you're enabling our advanced algorithm to analyze and predict the market value of your vehicle with unparalleled precision. ");
    i010.\u0275\u0275elementEnd();
    i010.\u0275\u0275elementStart(5, "h1", 1);
    i010.\u0275\u0275text(6, '"How It Works: A Simple Process"');
    i010.\u0275\u0275elementEnd();
    i010.\u0275\u0275elementStart(7, "p");
    i010.\u0275\u0275text(8, " Our process is designed to be straightforward and user-friendly. First, you fill out a form with details about your car, such as its make, model, year, mileage, condition, and any notable features. This information is crucial for our model to accurately assess the car's value. Once you've submitted your answers, our AI-powered predictor takes over. It analyzes the data you've provided, considering over 200 factors to give you a precise price estimate. The more accurate your answers, the more accurate the price prediction will be. ");
    i010.\u0275\u0275elementEnd();
    i010.\u0275\u0275elementStart(9, "a", 2);
    i010.\u0275\u0275text(10, "Start Now!");
    i010.\u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    i010.\u0275\u0275advance(9);
    i010.\u0275\u0275property("routerLink", "");
  }
}, dependencies: [RouterModule4, i16.RouterLink] });
var HowItWorksComponent = _HowItWorksComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i010.\u0275setClassDebugInfo(HowItWorksComponent, { className: "HowItWorksComponent", filePath: "src\\app\\components\\how-it-works\\how-it-works.component.ts", lineNumber: 11 });
})();

// src/app/components/quiz/quiz.component.ts
import { Component as Component12 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";

// src/app/components/quiz/start-quiz/start-quiz.component.ts
import { Component as Component9, EventEmitter, Input as Input3, Output } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { FormControl as FormControl3, Validators as Validators3, FormsModule as FormsModule4, ReactiveFormsModule as ReactiveFormsModule4 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_forms.js?v=7f891212";
import * as i011 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i17 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_forms.js?v=7f891212";
function StartQuizComponent_Conditional_17_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    i011.\u0275\u0275elementStart(0, "small");
    i011.\u0275\u0275text(1, " This field is required. ");
    i011.\u0275\u0275elementEnd();
  }
}
function StartQuizComponent_Conditional_17_Template(rf, ctx) {
  if (rf & 1) {
    i011.\u0275\u0275elementStart(0, "div", 8);
    i011.\u0275\u0275template(1, StartQuizComponent_Conditional_17_Conditional_1_Template, 2, 0, "small");
    i011.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i011.\u0275\u0275nextContext();
    i011.\u0275\u0275advance();
    i011.\u0275\u0275conditional(1, ctx_r0.quizName.hasError("required") ? 1 : -1);
  }
}
var _StartQuizComponent = class _StartQuizComponent {
  constructor() {
    this.quizName = new FormControl3("", [Validators3.required]);
    this.showError = false;
    this.quizPageChange = new EventEmitter();
    this.quiz = new EventEmitter();
    this.type = "Slow";
    this.changeType = (event) => {
      const inputElement = event.target;
      if (this.type === "Fast" && inputElement.id !== "Fast")
        this.type = "Slow";
      else if (this.type === "Slow" && inputElement.id !== "Slow")
        this.type = "Fast";
    };
  }
  onSubmit() {
    if (this.quizName.valid) {
      this.showError = false;
      this.quiz.emit({ name: this.quizName.value, type: this.type });
      this.quizPageChange.emit(2);
    } else {
      this.showError = true;
      console.log("Quiz name is required.");
    }
  }
};
_StartQuizComponent.\u0275fac = function StartQuizComponent_Factory(t) {
  return new (t || _StartQuizComponent)();
};
_StartQuizComponent.\u0275cmp = /* @__PURE__ */ i011.\u0275\u0275defineComponent({ type: _StartQuizComponent, selectors: [["start-quiz"]], inputs: { quizPage: "quizPage" }, outputs: { quizPageChange: "quizPageChange", quiz: "quiz" }, standalone: true, features: [i011.\u0275\u0275StandaloneFeature], decls: 25, vars: 4, consts: [[1, "flex", "flex-col", "gap-6", "h-full", "justify-center", "w-fit", "sm:items-start", "items-center", "sm:text-start", "text-center", "mt-3"], [1, "font-bold", "min-[400px]:text-6xl", "text-4xl", "my-3"], [1, "flex", "flex-col", "min-[400px]:text-xl", "text-lg"], [1, "text-sun", "font-bold", "mr-2"], [1, "w-full", "mt-10", 3, "ngSubmit"], [1, "relative", "border", "border-[#C1BBBB]"], ["type", "text", "id", "quizName", "placeholder", " ", 1, "block", "px-2.5", "pb-2.5", "pt-5", "w-full", "font-semibold", "min-[400px]:text-lg", "focus:border-l-2", "focus:border-[#fcc822]", "appearance-none", "focus:outline-none", "focus:ring-0", "peer", "text-sun", 3, "formControl"], ["for", "quizName", 1, "absolute", "min-[400px]:text-base", "text-sm", "text-gray-500", "duration-300", "transform", "-translate-y-4", "scale-75", "top-4", "z-10", "origin-[0]", "start-2.5", "peer-placeholder-shown:scale-100", "peer-placeholder-shown:translate-y-0", "peer-focus:scale-75", "peer-focus:-translate-y-4", "rtl:peer-focus:translate-x-1/4", "rtl:peer-focus:left-auto", "cursor-text"], [1, "text-red-600", "text-sm"], [1, "flex", "gap-8", "mt-16", "min-[400px]:text-xl", "text-lg", "font-semibold", "sm:justify-start", "justify-center"], ["id", "Slow", 3, "click", "className"], ["id", "Fast", 3, "click", "className"], ["type", "submit", 1, "btn-fill-sun", "min-[400px]:text-2xl", "text-xl", "mt-16"]], template: function StartQuizComponent_Template(rf, ctx) {
  if (rf & 1) {
    i011.\u0275\u0275elementStart(0, "div", 0)(1, "p", 1);
    i011.\u0275\u0275text(2, "Choose type of Quiz");
    i011.\u0275\u0275elementEnd();
    i011.\u0275\u0275elementStart(3, "div", 2)(4, "span")(5, "span", 3);
    i011.\u0275\u0275text(6, "Fast: ");
    i011.\u0275\u0275elementEnd();
    i011.\u0275\u0275text(7, " 7 Questions ");
    i011.\u0275\u0275elementEnd();
    i011.\u0275\u0275elementStart(8, "span")(9, "span", 3);
    i011.\u0275\u0275text(10, "Slow: ");
    i011.\u0275\u0275elementEnd();
    i011.\u0275\u0275text(11, " 17 Questions ");
    i011.\u0275\u0275elementEnd()();
    i011.\u0275\u0275elementStart(12, "form", 4);
    i011.\u0275\u0275listener("ngSubmit", function StartQuizComponent_Template_form_ngSubmit_12_listener() {
      return ctx.onSubmit();
    });
    i011.\u0275\u0275elementStart(13, "div", 5);
    i011.\u0275\u0275element(14, "input", 6);
    i011.\u0275\u0275elementStart(15, "label", 7);
    i011.\u0275\u0275text(16, "Quiz Name");
    i011.\u0275\u0275elementEnd()();
    i011.\u0275\u0275template(17, StartQuizComponent_Conditional_17_Template, 2, 1, "div", 8);
    i011.\u0275\u0275elementStart(18, "div", 9)(19, "span", 10);
    i011.\u0275\u0275listener("click", function StartQuizComponent_Template_span_click_19_listener($event) {
      return ctx.changeType($event);
    });
    i011.\u0275\u0275text(20, "Slow");
    i011.\u0275\u0275elementEnd();
    i011.\u0275\u0275elementStart(21, "span", 11);
    i011.\u0275\u0275listener("click", function StartQuizComponent_Template_span_click_21_listener($event) {
      return ctx.changeType($event);
    });
    i011.\u0275\u0275text(22, "Fast");
    i011.\u0275\u0275elementEnd()();
    i011.\u0275\u0275elementStart(23, "button", 12);
    i011.\u0275\u0275text(24, "Start Quiz");
    i011.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    i011.\u0275\u0275advance(14);
    i011.\u0275\u0275property("formControl", ctx.quizName);
    i011.\u0275\u0275advance(3);
    i011.\u0275\u0275conditional(17, ctx.showError || ctx.quizName.invalid && (ctx.quizName.dirty || ctx.quizName.touched) ? 17 : -1);
    i011.\u0275\u0275advance(2);
    i011.\u0275\u0275property("className", ctx.type === "Slow" ? "bg-[#fcc822] px-10 py-2 cursor-pointer" : "bg-gray-400 px-10 py-2 cursor-pointer");
    i011.\u0275\u0275advance(2);
    i011.\u0275\u0275property("className", ctx.type === "Fast" ? "bg-[#fcc822] px-10 py-2 cursor-pointer" : "bg-gray-400 px-10 py-2 cursor-pointer");
  }
}, dependencies: [FormsModule4, i17.\u0275NgNoValidate, i17.DefaultValueAccessor, i17.NgControlStatus, i17.NgControlStatusGroup, i17.NgForm, ReactiveFormsModule4, i17.FormControlDirective] });
var StartQuizComponent = _StartQuizComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i011.\u0275setClassDebugInfo(StartQuizComponent, { className: "StartQuizComponent", filePath: "src\\app\\components\\quiz\\start-quiz\\start-quiz.component.ts", lineNumber: 17 });
})();

// src/app/components/quiz/questions/questions.component.ts
import { Component as Component11, EventEmitter as EventEmitter2, Input as Input4, Output as Output2 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { Validators as Validators4, FormsModule as FormsModule5, ReactiveFormsModule as ReactiveFormsModule5 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_forms.js?v=7f891212";
import { HttpClientModule } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import { MatInputModule } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_input.js?v=7f891212";
import { MatFormFieldModule } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_form-field.js?v=7f891212";
import { MatStepperModule } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_stepper.js?v=7f891212";
import { MatButtonModule as MatButtonModule2 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_button.js?v=7f891212";

// src/app/components/quiz/result/result.component.ts
import { Component as Component10, Inject } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { MAT_DIALOG_DATA, MatDialogTitle, MatDialogContent } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_dialog.js?v=7f891212";
import * as i013 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i18 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_dialog.js?v=7f891212";

// src/app/services/quiz.service.ts
import { Injectable as Injectable3 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { HttpHeaders as HttpHeaders2 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import { catchError, Subject, throwError } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs.js?v=7f891212";
import { webSocket } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs_webSocket.js?v=7f891212";
import * as i012 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i24 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
var _QuizService = class _QuizService {
  constructor(storage, http) {
    this.storage = storage;
    this.http = http;
    this.quizSubject = new Subject();
    this.initWebSocket();
  }
  watch() {
    return this.quizSubject.asObservable();
  }
  getQuizzes() {
    let options = this.getStandardOptions();
    const quizzes = this.http.get("http://localhost:3000/api/quiz", options).pipe(catchError(this.handleError));
    quizzes.subscribe((res) => {
      this.quizSubject.next(res);
    });
    return quizzes;
  }
  getItsPermission() {
    let options = this.getStandardOptions();
    return this.http.get("http://localhost:3000/api/quiz/permissions", options).pipe(catchError(this.handleError));
  }
  initWebSocket() {
    const token = this.storage.getToken();
    const url = `ws://localhost:3000/api/quiz?token=${token}`;
    this.socket$ = webSocket(url);
    this.socket$.subscribe((message) => {
      this.quizSubject.next(message);
    }, (error) => console.error("WebSocket error:", error), () => console.log("WebSocket connection closed"));
  }
  getStandardOptions() {
    const token = this.storage.getToken();
    return {
      headers: new HttpHeaders2({
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`
      })
    };
  }
  handleError(error) {
    if (error.status === 0) {
      console.error("There is an issue with the client or network", error.error);
    } else {
      console.error("Server-Side-Error: ", error.error);
    }
    return throwError(() => new Error("Cannot retrieve quizzes from the server. Please try again."));
  }
  getQuiz(id) {
    let options = this.getStandardOptions();
    return this.http.get(`http://localhost:3000/api/quiz/${id}`, options).pipe(catchError(this.handleError));
  }
  addQuiz(payload) {
    let options = this.getStandardOptions();
    return this.http.post(`http://localhost:3000/api/quiz`, payload, options).pipe(catchError(this.handleError));
  }
  updateQuiz(id, payload) {
    let options = this.getStandardOptions();
    return this.http.patch(`http://localhost:3000/api/quiz/${id}`, payload, options).pipe(catchError(this.handleError));
  }
  deleteQuiz(id) {
    let options = this.getStandardOptions();
    return this.http.delete(`http://localhost:3000/api/quiz/${id}`, options).pipe(catchError(this.handleError));
  }
};
_QuizService.\u0275fac = function QuizService_Factory(t) {
  return new (t || _QuizService)(i012.\u0275\u0275inject(StorageService), i012.\u0275\u0275inject(i24.HttpClient));
};
_QuizService.\u0275prov = /* @__PURE__ */ i012.\u0275\u0275defineInjectable({ token: _QuizService, factory: _QuizService.\u0275fac, providedIn: "root" });
var QuizService = _QuizService;

// src/app/components/quiz/result/result.component.ts
import * as i3 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
var _ResultComponent = class _ResultComponent {
  constructor(data, dialog, quizService, router) {
    this.data = data;
    this.dialog = dialog;
    this.quizService = quizService;
    this.router = router;
  }
  closeDialog() {
    this.dialog.closeAll();
  }
  saveQuiz() {
    this.quizService.addQuiz(this.data.payload).subscribe((res) => {
      console.log(this.data.payload);
      this.closeDialog();
      this.router.navigateByUrl("");
      alert("Quiz Saved Successfully");
    }, (err) => {
      console.log(err);
    });
  }
};
_ResultComponent.\u0275fac = function ResultComponent_Factory(t) {
  return new (t || _ResultComponent)(i013.\u0275\u0275directiveInject(MAT_DIALOG_DATA), i013.\u0275\u0275directiveInject(i18.MatDialog), i013.\u0275\u0275directiveInject(QuizService), i013.\u0275\u0275directiveInject(i3.Router));
};
_ResultComponent.\u0275cmp = /* @__PURE__ */ i013.\u0275\u0275defineComponent({ type: _ResultComponent, selectors: [["app-result"]], standalone: true, features: [i013.\u0275\u0275StandaloneFeature], decls: 16, vars: 1, consts: [[2, "max-height", "fit-content"], [1, "flex", "flex-col", "gap-7", "justify-center", "items-center", "py-4"], [1, "flex", "flex-col", "bg-[#FCC822]", "justify-center", "items-center", "rounded-full", "border", "border-black", "sm:px-32", "px-12", "py-8", "sm:py-28", "aspect-square", "sm:text-5xl", "text-3xl", "sm:gap-8", "gap-4", "text-white"], [1, "flex", "flex-col", "items-center", "sm:text-6xl", "text-4xl"], [1, "sm:text-xl", "text-lg", "font-semibold", "text-center", "max-w-[900px]"], [1, "flex", "gap-4", "w-full", "text-xl", "sm:self-end", "justify-end"], [1, "btn-fill-black", 3, "click"], [1, "btn-fill-sun", 3, "click"]], template: function ResultComponent_Template(rf, ctx) {
  if (rf & 1) {
    i013.\u0275\u0275elementStart(0, "mat-dialog-content", 0)(1, "div", 1)(2, "div", 2)(3, "span");
    i013.\u0275\u0275text(4, "Price");
    i013.\u0275\u0275elementEnd();
    i013.\u0275\u0275elementStart(5, "span", 3);
    i013.\u0275\u0275text(6);
    i013.\u0275\u0275elementStart(7, "span");
    i013.\u0275\u0275text(8, "USD");
    i013.\u0275\u0275elementEnd()()();
    i013.\u0275\u0275elementStart(9, "span", 4);
    i013.\u0275\u0275text(10, "Keep in mind that this is a prediction based on a dataset of previous used and sold cars, It's not 100% accurate");
    i013.\u0275\u0275elementEnd();
    i013.\u0275\u0275elementStart(11, "div", 5)(12, "button", 6);
    i013.\u0275\u0275listener("click", function ResultComponent_Template_button_click_12_listener() {
      return ctx.closeDialog();
    });
    i013.\u0275\u0275text(13, "Cancel");
    i013.\u0275\u0275elementEnd();
    i013.\u0275\u0275elementStart(14, "button", 7);
    i013.\u0275\u0275listener("click", function ResultComponent_Template_button_click_14_listener() {
      return ctx.saveQuiz();
    });
    i013.\u0275\u0275text(15, "Save");
    i013.\u0275\u0275elementEnd()()()();
  }
  if (rf & 2) {
    i013.\u0275\u0275advance(6);
    i013.\u0275\u0275textInterpolate1(" ", ctx.data.price, " ");
  }
}, dependencies: [MatDialogContent] });
var ResultComponent = _ResultComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i013.\u0275setClassDebugInfo(ResultComponent, { className: "ResultComponent", filePath: "src\\app\\components\\quiz\\result\\result.component.ts", lineNumber: 23 });
})();

// src/app/components/quiz/questions/questions.component.ts
import * as i018 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i19 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_forms.js?v=7f891212";
import * as i29 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_dialog.js?v=7f891212";

// src/app/services/question.service.ts
import { HttpHeaders as HttpHeaders3 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import { Injectable as Injectable4 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { catchError as catchError2, Subject as Subject2, throwError as throwError2 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs.js?v=7f891212";
import * as i014 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i25 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
var _QuestionService = class _QuestionService {
  constructor(storage, http) {
    this.storage = storage;
    this.http = http;
    this.questionSubject = new Subject2();
  }
  getStandardOptions() {
    const token = this.storage.getToken();
    return {
      headers: new HttpHeaders3({
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`
      })
    };
  }
  watch() {
    return this.questionSubject.asObservable();
  }
  getItsPermission() {
    let options = this.getStandardOptions();
    return this.http.get("http://localhost:3000/api/question/permissions", options).pipe(catchError2(this.handleError));
  }
  getQuestions() {
    let options = this.getStandardOptions();
    const questions = this.http.get("http://localhost:3000/api/question", options).pipe(catchError2(this.handleError));
    questions.subscribe((res) => {
      this.questionSubject.next(res);
    });
    return questions;
  }
  getFastQuestions() {
    let options = this.getStandardOptions();
    return this.http.get("http://localhost:3000/api/question/fast", options).pipe(catchError2(this.handleError));
  }
  handleError(error) {
    if (error.status === 0) {
      console.error("There is an issue with the client or network", error.error);
    } else {
      console.error("Server-Side-Error: ", error.error);
    }
    return throwError2(() => new Error("Cannot retrive questions from the server. Please try again."));
  }
  getQuestion(id) {
    let options = this.getStandardOptions();
    return this.http.get(`http://localhost:3000/api/question/${id}`, options).pipe(catchError2(this.handleError));
  }
};
_QuestionService.\u0275fac = function QuestionService_Factory(t) {
  return new (t || _QuestionService)(i014.\u0275\u0275inject(StorageService), i014.\u0275\u0275inject(i25.HttpClient));
};
_QuestionService.\u0275prov = /* @__PURE__ */ i014.\u0275\u0275defineInjectable({ token: _QuestionService, factory: _QuestionService.\u0275fac, providedIn: "root" });
var QuestionService = _QuestionService;

// src/app/services/brand.service.ts
import { Injectable as Injectable5 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { HttpHeaders as HttpHeaders4 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import { catchError as catchError3, Subject as Subject3, throwError as throwError3 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs.js?v=7f891212";
import { webSocket as webSocket2 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs_webSocket.js?v=7f891212";
import * as i015 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i26 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
var _BrandService = class _BrandService {
  constructor(storage, http) {
    this.storage = storage;
    this.http = http;
    this.brandSubject = new Subject3();
    this.initWebSocket();
  }
  watch() {
    return this.brandSubject.asObservable();
  }
  getBrands() {
    let options = this.getStandardOptions();
    const brands = this.http.get("http://localhost:3000/api/brand", options).pipe(catchError3(this.handleError));
    brands.subscribe((res) => {
      this.brandSubject.next(res);
    });
    return brands;
  }
  getItsPermission() {
    let options = this.getStandardOptions();
    return this.http.get("http://localhost:3000/api/brand/permissions", options).pipe(catchError3(this.handleError));
  }
  initWebSocket() {
    const token = this.storage.getToken();
    const url = `ws://localhost:3000/api/brand?token=${token}`;
    this.socket$ = webSocket2(url);
    this.socket$.subscribe((message) => {
      this.brandSubject.next(message);
    }, (error) => console.error("WebSocket error:", error), () => console.log("WebSocket connection closed"));
  }
  getStandardOptions() {
    const token = this.storage.getToken();
    return {
      headers: new HttpHeaders4({
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`
      })
    };
  }
  handleError(error) {
    if (error.status === 0) {
      console.error("There is an issue with the client or network", error.error);
    } else {
      console.error("Server-Side-Error: ", error.error);
    }
    return throwError3(() => new Error("Cannot retrieve brands from the server. Please try again."));
  }
  getBrand(id) {
    let options = this.getStandardOptions();
    return this.http.get(`http://localhost:3000/api/brand/${id}`, options).pipe(catchError3(this.handleError));
  }
  addBrand(payload) {
    let options = this.getStandardOptions();
    return this.http.post(`http://localhost:3000/api/brand`, payload, options).pipe(catchError3(this.handleError));
  }
  updateBrand(id, payload) {
    let options = this.getStandardOptions();
    return this.http.patch(`http://localhost:3000/api/brand/${id}`, payload, options).pipe(catchError3(this.handleError));
  }
  deleteBrand(id) {
    let options = this.getStandardOptions();
    return this.http.delete(`http://localhost:3000/api/brand/${id}`, options).pipe(catchError3(this.handleError));
  }
};
_BrandService.\u0275fac = function BrandService_Factory(t) {
  return new (t || _BrandService)(i015.\u0275\u0275inject(StorageService), i015.\u0275\u0275inject(i26.HttpClient));
};
_BrandService.\u0275prov = /* @__PURE__ */ i015.\u0275\u0275defineInjectable({ token: _BrandService, factory: _BrandService.\u0275fac, providedIn: "root" });
var BrandService = _BrandService;

// src/app/services/model.service.ts
import { Injectable as Injectable6 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { HttpHeaders as HttpHeaders5 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import { catchError as catchError4, Subject as Subject4, throwError as throwError4 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs.js?v=7f891212";
import { webSocket as webSocket3 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs_webSocket.js?v=7f891212";
import * as i016 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i27 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
var _ModelService = class _ModelService {
  constructor(storage, http) {
    this.storage = storage;
    this.http = http;
    this.modelSubject = new Subject4();
    this.initWebSocket();
  }
  getItsPermission() {
    let options = this.getStandardOptions();
    return this.http.get("http://localhost:3000/api/model/permissions", options).pipe(catchError4(this.handleError));
  }
  watch() {
    return this.modelSubject.asObservable();
  }
  getModels() {
    let options = this.getStandardOptions();
    const models = this.http.get("http://localhost:3000/api/model", options).pipe(catchError4(this.handleError));
    models.subscribe((res) => {
      this.modelSubject.next(res);
    });
    return models;
  }
  initWebSocket() {
    const token = this.storage.getToken();
    const url = `ws://localhost:3000/api/model?token=${token}`;
    this.socket$ = webSocket3(url);
    this.socket$.subscribe((message) => {
      this.modelSubject.next(message);
    }, (error) => console.error("WebSocket error:", error), () => console.log("WebSocket connection closed"));
  }
  getStandardOptions() {
    const token = this.storage.getToken();
    return {
      headers: new HttpHeaders5({
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`
      })
    };
  }
  handleError(error) {
    if (error.status === 0) {
      console.error("There is an issue with the client or network", error.error);
    } else {
      console.error("Server-Side-Error: ", error.error);
    }
    return throwError4(() => new Error("Cannot retrieve models from the server. Please try again."));
  }
  getModel(id) {
    let options = this.getStandardOptions();
    return this.http.get(`http://localhost:3000/api/model/${id}`, options).pipe(catchError4(this.handleError));
  }
  addModel(payload) {
    let options = this.getStandardOptions();
    return this.http.post(`http://localhost:3000/api/model`, payload, options).pipe(catchError4(this.handleError));
  }
  updateModel(id, payload) {
    let options = this.getStandardOptions();
    return this.http.patch(`http://localhost:3000/api/model/${id}`, payload, options).pipe(catchError4(this.handleError));
  }
  deleteModel(id) {
    let options = this.getStandardOptions();
    return this.http.delete(`http://localhost:3000/api/model/${id}`, options).pipe(catchError4(this.handleError));
  }
};
_ModelService.\u0275fac = function ModelService_Factory(t) {
  return new (t || _ModelService)(i016.\u0275\u0275inject(StorageService), i016.\u0275\u0275inject(i27.HttpClient));
};
_ModelService.\u0275prov = /* @__PURE__ */ i016.\u0275\u0275defineInjectable({ token: _ModelService, factory: _ModelService.\u0275fac, providedIn: "root" });
var ModelService = _ModelService;

// src/app/services/version.service.ts
import { Injectable as Injectable7 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { HttpHeaders as HttpHeaders6 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import { catchError as catchError5, Subject as Subject5, throwError as throwError5 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs.js?v=7f891212";
import { webSocket as webSocket4 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs_webSocket.js?v=7f891212";
import * as i017 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i28 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
var _VersionService = class _VersionService {
  constructor(storage, http) {
    this.storage = storage;
    this.http = http;
    this.versionSubject = new Subject5();
    this.initWebSocket();
  }
  watch() {
    return this.versionSubject.asObservable();
  }
  getVersions() {
    let options = this.getStandardOptions();
    const versions = this.http.get("http://localhost:3000/api/version", options).pipe(catchError5(this.handleError));
    versions.subscribe((res) => {
      this.versionSubject.next(res);
    });
    return versions;
  }
  initWebSocket() {
    const token = this.storage.getToken();
    const url = `ws://localhost:3000/api/version?token=${token}`;
    this.socket$ = webSocket4(url);
    this.socket$.subscribe((message) => {
      this.versionSubject.next(message);
    }, (error) => console.error("WebSocket error:", error), () => console.log("WebSocket connection closed"));
  }
  getItsPermission() {
    let options = this.getStandardOptions();
    return this.http.get("http://localhost:3000/api/version/permissions", options).pipe(catchError5(this.handleError));
  }
  getStandardOptions() {
    const token = this.storage.getToken();
    return {
      headers: new HttpHeaders6({
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`
      })
    };
  }
  handleError(error) {
    if (error.status === 0) {
      console.error("There is an issue with the client or network", error.error);
    } else {
      console.error("Server-Side-Error: ", error.error);
    }
    return throwError5(() => new Error("Cannot retrieve versions from the server. Please try again."));
  }
  getVersion(id) {
    let options = this.getStandardOptions();
    return this.http.get(`http://localhost:3000/api/version/${id}`, options).pipe(catchError5(this.handleError));
  }
  addVersion(payload) {
    let options = this.getStandardOptions();
    return this.http.post(`http://localhost:3000/api/version`, payload, options).pipe(catchError5(this.handleError));
  }
  updateVersion(id, payload) {
    let options = this.getStandardOptions();
    return this.http.patch(`http://localhost:3000/api/version/${id}`, payload, options).pipe(catchError5(this.handleError));
  }
  deleteVersion(id) {
    let options = this.getStandardOptions();
    return this.http.delete(`http://localhost:3000/api/version/${id}`, options).pipe(catchError5(this.handleError));
  }
};
_VersionService.\u0275fac = function VersionService_Factory(t) {
  return new (t || _VersionService)(i017.\u0275\u0275inject(StorageService), i017.\u0275\u0275inject(i28.HttpClient));
};
_VersionService.\u0275prov = /* @__PURE__ */ i017.\u0275\u0275defineInjectable({ token: _VersionService, factory: _VersionService.\u0275fac, providedIn: "root" });
var VersionService = _VersionService;

// src/app/components/quiz/questions/questions.component.ts
import * as i7 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import * as i9 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_stepper.js?v=7f891212";
import * as i10 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_input.js?v=7f891212";
function QuestionsComponent_For_4_For_4_Conditional_0_Conditional_4_For_1_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275elementStart(0, "option", 15);
    i018.\u0275\u0275text(1);
    i018.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const brand_r3 = ctx.$implicit;
    i018.\u0275\u0275property("value", brand_r3.brand);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275textInterpolate(brand_r3.brand);
  }
}
function QuestionsComponent_For_4_For_4_Conditional_0_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275repeaterCreate(0, QuestionsComponent_For_4_For_4_Conditional_0_Conditional_4_For_1_Template, 2, 2, "option", 15, i018.\u0275\u0275repeaterTrackByIndex);
  }
  if (rf & 2) {
    const ctx_r1 = i018.\u0275\u0275nextContext(4);
    i018.\u0275\u0275repeater(ctx_r1.dropdowns.brand);
  }
}
function QuestionsComponent_For_4_For_4_Conditional_0_Conditional_5_For_1_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275elementStart(0, "option", 15);
    i018.\u0275\u0275text(1);
    i018.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const model_r4 = ctx.$implicit;
    i018.\u0275\u0275property("value", model_r4.model);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275textInterpolate(model_r4.model);
  }
}
function QuestionsComponent_For_4_For_4_Conditional_0_Conditional_5_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275repeaterCreate(0, QuestionsComponent_For_4_For_4_Conditional_0_Conditional_5_For_1_Template, 2, 2, "option", 15, i018.\u0275\u0275repeaterTrackByIndex);
  }
  if (rf & 2) {
    const ctx_r1 = i018.\u0275\u0275nextContext(4);
    i018.\u0275\u0275repeater(ctx_r1.dropdowns.model);
  }
}
function QuestionsComponent_For_4_For_4_Conditional_0_Conditional_6_For_1_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275elementStart(0, "option", 15);
    i018.\u0275\u0275text(1);
    i018.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const version_r5 = ctx.$implicit;
    i018.\u0275\u0275property("value", version_r5.version);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275textInterpolate(version_r5.version);
  }
}
function QuestionsComponent_For_4_For_4_Conditional_0_Conditional_6_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275repeaterCreate(0, QuestionsComponent_For_4_For_4_Conditional_0_Conditional_6_For_1_Template, 2, 2, "option", 15, i018.\u0275\u0275repeaterTrackByIndex);
  }
  if (rf & 2) {
    const ctx_r1 = i018.\u0275\u0275nextContext(4);
    i018.\u0275\u0275repeater(ctx_r1.dropdowns.version);
  }
}
function QuestionsComponent_For_4_For_4_Conditional_0_Conditional_7_For_1_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275elementStart(0, "option", 15);
    i018.\u0275\u0275text(1);
    i018.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const value_r6 = ctx.$implicit;
    i018.\u0275\u0275property("value", value_r6);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275textInterpolate(value_r6);
  }
}
function QuestionsComponent_For_4_For_4_Conditional_0_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275repeaterCreate(0, QuestionsComponent_For_4_For_4_Conditional_0_Conditional_7_For_1_Template, 2, 2, "option", 15, i018.\u0275\u0275repeaterTrackByIndex);
  }
  if (rf & 2) {
    const question_r7 = i018.\u0275\u0275nextContext(2).$implicit;
    const ctx_r1 = i018.\u0275\u0275nextContext(2);
    i018.\u0275\u0275repeater(ctx_r1.dropdowns.const[question_r7.question]);
  }
}
function QuestionsComponent_For_4_For_4_Conditional_0_Conditional_8_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275elementStart(0, "div", 14)(1, "small");
    i018.\u0275\u0275text(2, " This field is required. ");
    i018.\u0275\u0275elementEnd()();
  }
}
function QuestionsComponent_For_4_For_4_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i018.\u0275\u0275getCurrentView();
    i018.\u0275\u0275elementStart(0, "div", 11)(1, "label", 12);
    i018.\u0275\u0275text(2);
    i018.\u0275\u0275elementEnd();
    i018.\u0275\u0275elementStart(3, "select", 13);
    i018.\u0275\u0275listener("change", function QuestionsComponent_For_4_For_4_Conditional_0_Template_select_change_3_listener($event) {
      i018.\u0275\u0275restoreView(_r1);
      const ctx_r1 = i018.\u0275\u0275nextContext(3);
      return i018.\u0275\u0275resetView(ctx_r1.handleChange($event));
    });
    i018.\u0275\u0275template(4, QuestionsComponent_For_4_For_4_Conditional_0_Conditional_4_Template, 2, 0)(5, QuestionsComponent_For_4_For_4_Conditional_0_Conditional_5_Template, 2, 0)(6, QuestionsComponent_For_4_For_4_Conditional_0_Conditional_6_Template, 2, 0)(7, QuestionsComponent_For_4_For_4_Conditional_0_Conditional_7_Template, 2, 0);
    i018.\u0275\u0275elementEnd();
    i018.\u0275\u0275template(8, QuestionsComponent_For_4_For_4_Conditional_0_Conditional_8_Template, 3, 0, "div", 14);
    i018.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    let tmp_30_0;
    const ctx_r7 = i018.\u0275\u0275nextContext();
    const question_r7 = ctx_r7.$implicit;
    const $index_r9 = ctx_r7.$index;
    const formGroup_r10 = i018.\u0275\u0275nextContext().$implicit;
    const ctx_r1 = i018.\u0275\u0275nextContext();
    i018.\u0275\u0275propertyInterpolate("id", $index_r9);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275property("for", question_r7.question);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275textInterpolate2("", ctx_r1.questions.indexOf(question_r7) + 1, " - ", question_r7.question, "");
    i018.\u0275\u0275advance();
    i018.\u0275\u0275property("formControlName", question_r7._id)("id", question_r7.question);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275conditional(4, question_r7.question.split(" ").includes("brand") ? 4 : -1);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275conditional(5, question_r7.question.split(" ").includes("model") ? 5 : -1);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275conditional(6, question_r7.question.split(" ").includes("version") ? 6 : 7);
    i018.\u0275\u0275advance(2);
    i018.\u0275\u0275conditional(8, ctx_r1.showError && !((tmp_30_0 = formGroup_r10.get(question_r7._id)) == null ? null : tmp_30_0.valid) || !((tmp_30_0 = formGroup_r10.get(question_r7._id)) == null ? null : tmp_30_0.valid) && (((tmp_30_0 = formGroup_r10.get(question_r7._id)) == null ? null : tmp_30_0.dirty) || ((tmp_30_0 = formGroup_r10.get(question_r7._id)) == null ? null : tmp_30_0.touched)) ? 8 : -1);
  }
}
function QuestionsComponent_For_4_For_4_Conditional_1_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275elementStart(0, "div", 14)(1, "small");
    i018.\u0275\u0275text(2, " This field is required. ");
    i018.\u0275\u0275elementEnd()();
  }
}
function QuestionsComponent_For_4_For_4_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275elementStart(0, "div", 11)(1, "label", 12);
    i018.\u0275\u0275text(2);
    i018.\u0275\u0275elementEnd();
    i018.\u0275\u0275element(3, "input", 16);
    i018.\u0275\u0275template(4, QuestionsComponent_For_4_For_4_Conditional_1_Conditional_4_Template, 3, 0, "div", 14);
    i018.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    let tmp_30_0;
    const ctx_r7 = i018.\u0275\u0275nextContext();
    const question_r7 = ctx_r7.$implicit;
    const $index_r9 = ctx_r7.$index;
    const formGroup_r10 = i018.\u0275\u0275nextContext().$implicit;
    const ctx_r1 = i018.\u0275\u0275nextContext();
    i018.\u0275\u0275propertyInterpolate("id", $index_r9);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275property("for", question_r7.question);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275textInterpolate2("", ctx_r1.questions.indexOf(question_r7) + 1, " - ", question_r7.question, "");
    i018.\u0275\u0275advance();
    i018.\u0275\u0275propertyInterpolate("type", question_r7.type.toLowerCase());
    i018.\u0275\u0275property("formControlName", question_r7._id)("placeholder", question_r7.question)("name", question_r7)("id", question_r7.question);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275conditional(4, ctx_r1.showError && !((tmp_30_0 = formGroup_r10.get(question_r7._id)) == null ? null : tmp_30_0.valid) || !((tmp_30_0 = formGroup_r10.get(question_r7._id)) == null ? null : tmp_30_0.valid) && (((tmp_30_0 = formGroup_r10.get(question_r7._id)) == null ? null : tmp_30_0.dirty) || ((tmp_30_0 = formGroup_r10.get(question_r7._id)) == null ? null : tmp_30_0.touched)) ? 4 : -1);
  }
}
function QuestionsComponent_For_4_For_4_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275template(0, QuestionsComponent_For_4_For_4_Conditional_0_Template, 9, 10, "div", 11)(1, QuestionsComponent_For_4_For_4_Conditional_1_Template, 5, 10);
  }
  if (rf & 2) {
    const question_r7 = ctx.$implicit;
    i018.\u0275\u0275conditional(0, question_r7.type === "Dropdown" ? 0 : 1);
  }
}
function QuestionsComponent_For_4_Conditional_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r11 = i018.\u0275\u0275getCurrentView();
    i018.\u0275\u0275elementStart(0, "button", 17);
    i018.\u0275\u0275listener("click", function QuestionsComponent_For_4_Conditional_6_Template_button_click_0_listener() {
      i018.\u0275\u0275restoreView(_r11);
      const ctx_r1 = i018.\u0275\u0275nextContext(2);
      return i018.\u0275\u0275resetView(ctx_r1.goBack());
    });
    i018.\u0275\u0275element(1, "img", 18);
    i018.\u0275\u0275text(2, "Back");
    i018.\u0275\u0275elementEnd();
  }
}
function QuestionsComponent_For_4_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275elementStart(0, "button", 8);
    i018.\u0275\u0275element(1, "img", 18);
    i018.\u0275\u0275text(2, " Previous");
    i018.\u0275\u0275elementEnd();
  }
}
function QuestionsComponent_For_4_Conditional_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r12 = i018.\u0275\u0275getCurrentView();
    i018.\u0275\u0275elementStart(0, "button", 19);
    i018.\u0275\u0275listener("click", function QuestionsComponent_For_4_Conditional_8_Template_button_click_0_listener() {
      i018.\u0275\u0275restoreView(_r12);
      const formGroup_r10 = i018.\u0275\u0275nextContext().$implicit;
      const ctx_r1 = i018.\u0275\u0275nextContext();
      return i018.\u0275\u0275resetView(formGroup_r10.invalid ? ctx_r1.enableError() : ctx_r1.disableError());
    });
    i018.\u0275\u0275text(1, "Next ");
    i018.\u0275\u0275element(2, "img", 20);
    i018.\u0275\u0275elementEnd();
  }
}
function QuestionsComponent_For_4_Conditional_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r13 = i018.\u0275\u0275getCurrentView();
    i018.\u0275\u0275elementStart(0, "button", 21);
    i018.\u0275\u0275listener("click", function QuestionsComponent_For_4_Conditional_9_Template_button_click_0_listener() {
      i018.\u0275\u0275restoreView(_r13);
      const formGroup_r10 = i018.\u0275\u0275nextContext().$implicit;
      const ctx_r1 = i018.\u0275\u0275nextContext();
      return i018.\u0275\u0275resetView(formGroup_r10.invalid ? ctx_r1.enableError() : ctx_r1.openDialog());
    });
    i018.\u0275\u0275text(1, "Done ");
    i018.\u0275\u0275element(2, "img", 20);
    i018.\u0275\u0275elementEnd();
  }
}
function QuestionsComponent_For_4_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275elementStart(0, "mat-step", 3)(1, "form", 4)(2, "div", 5);
    i018.\u0275\u0275repeaterCreate(3, QuestionsComponent_For_4_For_4_Template, 2, 1, null, null, i018.\u0275\u0275repeaterTrackByIndex);
    i018.\u0275\u0275elementEnd();
    i018.\u0275\u0275elementStart(5, "div", 6);
    i018.\u0275\u0275template(6, QuestionsComponent_For_4_Conditional_6_Template, 3, 0, "button", 7)(7, QuestionsComponent_For_4_Conditional_7_Template, 3, 0, "button", 8)(8, QuestionsComponent_For_4_Conditional_8_Template, 3, 0, "button", 9)(9, QuestionsComponent_For_4_Conditional_9_Template, 3, 0, "button", 10);
    i018.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const formGroup_r10 = ctx.$implicit;
    const $index_r14 = ctx.$index;
    const ctx_r1 = i018.\u0275\u0275nextContext();
    i018.\u0275\u0275property("stepControl", formGroup_r10);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275property("formGroup", formGroup_r10);
    i018.\u0275\u0275advance(2);
    i018.\u0275\u0275repeater(ctx_r1.questions.slice($index_r14 * 5, ($index_r14 + 1) * 5));
    i018.\u0275\u0275advance(3);
    i018.\u0275\u0275conditional(6, $index_r14 === 0 ? 6 : -1);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275conditional(7, $index_r14 > 0 ? 7 : -1);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275conditional(8, $index_r14 < ctx_r1.formGroups.length - 1 ? 8 : -1);
    i018.\u0275\u0275advance();
    i018.\u0275\u0275conditional(9, $index_r14 === ctx_r1.formGroups.length - 1 ? 9 : -1);
  }
}
var _QuestionsComponent = class _QuestionsComponent {
  constructor(_formBuilder, dialog, questionService, brandService, modelService, versionService, http, userService) {
    this._formBuilder = _formBuilder;
    this.dialog = dialog;
    this.questionService = questionService;
    this.brandService = brandService;
    this.modelService = modelService;
    this.versionService = versionService;
    this.http = http;
    this.userService = userService;
    this.questions = [];
    this.formGroups = [];
    this.dropdowns = {
      brand: [],
      model: [],
      version: [],
      const: {
        "Fuel type": [
          "CNG",
          "Diesel",
          "Hybrid",
          "Hydrogen",
          "LPG",
          "Petrol",
          "Plug-in Hybrid"
        ],
        "Leather interior": ["Yes", "No"],
        Color: [
          "Beige",
          "Black",
          "Blue",
          "Brown",
          "Carnelian red",
          "Golden",
          "Green",
          "Grey",
          "Orange",
          "Pink",
          "Purple",
          "Red",
          "Silver",
          "Sky blue",
          "White",
          "Yellow"
        ],
        Cylinders: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16],
        "Gear box type": ["Automatic", "Manual", "Tiptronic", "Variator"],
        "Drive wheels": ["4x4", "Front", "Rear"],
        Doors: [2, 4],
        Condition: ["Almost New", "Good", "Bad"],
        Wheel: ["Left wheel", "Right-hand drive"],
        Airbags: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
        "Engine Volume": [
          0,
          0.1,
          0.2,
          0.3,
          0.4,
          0.5,
          0.6,
          0.7,
          0.8,
          0.9,
          1,
          1.1,
          1.2,
          1.3,
          1.4,
          1.5,
          1.6,
          1.7,
          1.8,
          1.9,
          2,
          2.1,
          2.2,
          2.3,
          2.4,
          2.5,
          2.6,
          2.7,
          2.8,
          2.9,
          3,
          3.1,
          3.2,
          3.3,
          3.4,
          3.5,
          3.6,
          3.7,
          3.8,
          3.9,
          4,
          4.2,
          4.3,
          4.4,
          4.5,
          4.6,
          4.7,
          4.8,
          5,
          5.2,
          5.3,
          5.4,
          5.5,
          5.6,
          5.7,
          5.8,
          5.9,
          6,
          6.2,
          6.3,
          6.4,
          6.7,
          6.8,
          7.3,
          20
        ],
        Turbo: ["Yes", "No"]
      }
    };
    this.quizPageChange = new EventEmitter2();
    this.showError = false;
  }
  ngOnInit() {
    if (this.quiz.type === "Slow") {
      this.questionService.getQuestions().subscribe((response) => {
        this.questions = response;
        this.createFormGroups();
      }, (error) => {
        alert(error.message);
      });
    } else {
      this.questionService.getFastQuestions().subscribe((response) => {
        this.questions = response;
        this.createFormGroups();
      }, (error) => {
        alert(error.message);
      });
    }
    this.brandService.getBrands().subscribe((res) => {
      this.dropdowns.brand = res;
    }, (error) => {
      console.error(error);
      alert(error);
    });
    this.modelService.getModels().subscribe((res) => {
      this.models = res;
    }, (error) => {
      console.error(error);
      alert(error);
    });
    this.versionService.getVersions().subscribe((res) => {
      this.versions = res;
    }, (error) => {
      console.error(error);
      alert(error);
    });
  }
  handleChange(event) {
    const e = event.target;
    if (e.id.includes("brand"))
      this.brandChange(event);
    else if (e.id.includes("model"))
      this.modelChange(event);
  }
  brandChange(event) {
    const brand = event.target;
    const brandId = brand.value;
    this.dropdowns.model = this.models.filter((model) => {
      let id;
      for (const b of this.dropdowns.brand) {
        if (brandId === b.brand) {
          id = b._id;
          break;
        }
      }
      return id === model.brand;
    });
  }
  modelChange(event) {
    console.log("model in");
    const model = event.target;
    const modelId = model.value;
    this.dropdowns.version = this.versions.filter((version) => {
      let id;
      for (const m of this.dropdowns.model) {
        if (modelId === m.model) {
          id = m._id;
          break;
        }
      }
      return id === version.model;
    });
  }
  enableError() {
    this.showError = true;
  }
  disableError() {
    this.showError = false;
  }
  openDialog() {
    this.showError = false;
    const formGroupsAsObject = this.formGroups.map((formGroup) => formGroup.getRawValue());
    let quizQuestions = [];
    let data = [];
    formGroupsAsObject.forEach((element, i) => {
      const keys = Object.keys(element);
      keys.forEach((key, j) => {
        var reg = /^\d+$/;
        let num = parseFloat(element[key]);
        const number = Math.ceil(num);
        if (!reg.test(element[key]) || isNaN(num) || element[key].trim() === "") {
          quizQuestions.push({ question: key, response: element[key] });
          data.push(element[key]);
        } else {
          quizQuestions.push({ question: key, response: number });
          data.push(number);
        }
      });
    });
    this.http.post(`http://127.0.0.1:5000/${this.quiz.type}`, { data }).subscribe((res) => {
      this.userService.getUser().subscribe((response) => {
        this.dialog.open(ResultComponent, {
          data: {
            price: Math.ceil(res.price),
            payload: {
              name: this.quiz.name,
              type: this.quiz.type,
              result: Math.ceil(res.price),
              quizQuestions,
              createdBy: response.user._id
            }
          }
        });
      }, (err) => console.log(err));
    }, (err) => {
      console.log(err);
    });
  }
  createFormGroups() {
    const numberOfGroups = Math.ceil(this.questions.length / 5);
    for (let i = 0; i < numberOfGroups; i++) {
      const group = this._formBuilder.group({});
      for (let j = 0; j < 5; j++) {
        const questionIndex = i * 5 + j;
        if (questionIndex < this.questions.length) {
          const questionId = this.questions[questionIndex]._id;
          group.addControl(String(questionId), this._formBuilder.control("", Validators4.required));
        }
      }
      this.formGroups.push(group);
    }
  }
  goBack() {
    this.quizPageChange.emit(1);
  }
};
_QuestionsComponent.\u0275fac = function QuestionsComponent_Factory(t) {
  return new (t || _QuestionsComponent)(i018.\u0275\u0275directiveInject(i19.FormBuilder), i018.\u0275\u0275directiveInject(i29.MatDialog), i018.\u0275\u0275directiveInject(QuestionService), i018.\u0275\u0275directiveInject(BrandService), i018.\u0275\u0275directiveInject(ModelService), i018.\u0275\u0275directiveInject(VersionService), i018.\u0275\u0275directiveInject(i7.HttpClient), i018.\u0275\u0275directiveInject(UserService));
};
_QuestionsComponent.\u0275cmp = /* @__PURE__ */ i018.\u0275\u0275defineComponent({ type: _QuestionsComponent, selectors: [["questions"]], inputs: { quiz: "quiz", quizPage: "quizPage" }, outputs: { quizPageChange: "quizPageChange" }, standalone: true, features: [i018.\u0275\u0275StandaloneFeature], decls: 5, vars: 1, consts: [["stepper", ""], [1, "h-full", "max-w-[900px]", "mx-auto"], [1, "h-full", 3, "linear"], [3, "stepControl"], [1, "h-full", "flex", "flex-col", "justify-between", "gap-3", 3, "formGroup"], [1, "w-full", "h-full", "flex", "flex-col", "gap-6", "sm:text-xl"], [1, "flex", "justify-between", "sm:text-xl"], [1, "btn-fill-black", "flex", "gap-2", "items-center"], ["matStepperPrevious", "", 1, "btn-fill-black", "flex", "gap-2", "items-center"], ["matStepperNext", "", 1, "btn-fill-sun", "flex", "gap-2", "items-center"], [1, "btn-fill-sun", "flex", "gap-2", "items-center"], [1, "flex", "flex-col", 3, "id"], [3, "for"], ["matInput", "", "required", "", 1, "border", "border-[#C1BBBB]", "text-sun", "outline-none", "sm:p-4", "p-2", "font-bold", 3, "change", "formControlName", "id"], [1, "text-red-600", "text-sm"], [3, "value"], ["matInput", "", "required", "", 1, "border", "border-[#C1BBBB]", "text-sun", "outline-none", "sm:p-4", "p-2", "font-bold", 3, "formControlName", "type", "placeholder", "name", "id"], [1, "btn-fill-black", "flex", "gap-2", "items-center", 3, "click"], ["src", "assets/leftBlack.png", "alt", ""], ["matStepperNext", "", 1, "btn-fill-sun", "flex", "gap-2", "items-center", 3, "click"], ["src", "assets/rightWhite.png", "alt", ""], [1, "btn-fill-sun", "flex", "gap-2", "items-center", 3, "click"]], template: function QuestionsComponent_Template(rf, ctx) {
  if (rf & 1) {
    i018.\u0275\u0275elementStart(0, "div", 1)(1, "mat-stepper", 2, 0);
    i018.\u0275\u0275repeaterCreate(3, QuestionsComponent_For_4_Template, 10, 6, "mat-step", 3, i018.\u0275\u0275repeaterTrackByIndex);
    i018.\u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    i018.\u0275\u0275advance();
    i018.\u0275\u0275property("linear", false);
    i018.\u0275\u0275advance(2);
    i018.\u0275\u0275repeater(ctx.formGroups);
  }
}, dependencies: [
  MatButtonModule2,
  HttpClientModule,
  MatStepperModule,
  i9.MatStep,
  i9.MatStepper,
  i9.MatStepperNext,
  i9.MatStepperPrevious,
  FormsModule5,
  i19.\u0275NgNoValidate,
  i19.NgSelectOption,
  i19.\u0275NgSelectMultipleOption,
  i19.DefaultValueAccessor,
  i19.SelectControlValueAccessor,
  i19.NgControlStatus,
  i19.NgControlStatusGroup,
  i19.RequiredValidator,
  ReactiveFormsModule5,
  i19.FormGroupDirective,
  i19.FormControlName,
  MatFormFieldModule,
  MatInputModule,
  i10.MatInput
] });
var QuestionsComponent = _QuestionsComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i018.\u0275setClassDebugInfo(QuestionsComponent, { className: "QuestionsComponent", filePath: "src\\app\\components\\quiz\\questions\\questions.component.ts", lineNumber: 40 });
})();

// src/app/components/quiz/quiz.component.ts
import * as i019 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
function QuizComponent_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i019.\u0275\u0275getCurrentView();
    i019.\u0275\u0275elementStart(0, "start-quiz", 1);
    i019.\u0275\u0275listener("quiz", function QuizComponent_Conditional_0_Template_start_quiz_quiz_0_listener($event) {
      i019.\u0275\u0275restoreView(_r1);
      const ctx_r1 = i019.\u0275\u0275nextContext();
      return i019.\u0275\u0275resetView(ctx_r1.quiz = $event);
    });
    i019.\u0275\u0275twoWayListener("quizPageChange", function QuizComponent_Conditional_0_Template_start_quiz_quizPageChange_0_listener($event) {
      i019.\u0275\u0275restoreView(_r1);
      const ctx_r1 = i019.\u0275\u0275nextContext();
      i019.\u0275\u0275twoWayBindingSet(ctx_r1.quizPage, $event) || (ctx_r1.quizPage = $event);
      return i019.\u0275\u0275resetView($event);
    });
    i019.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i019.\u0275\u0275nextContext();
    i019.\u0275\u0275twoWayProperty("quizPage", ctx_r1.quizPage);
  }
}
function QuizComponent_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = i019.\u0275\u0275getCurrentView();
    i019.\u0275\u0275elementStart(0, "questions", 2);
    i019.\u0275\u0275twoWayListener("quizPageChange", function QuizComponent_Conditional_1_Template_questions_quizPageChange_0_listener($event) {
      i019.\u0275\u0275restoreView(_r3);
      const ctx_r1 = i019.\u0275\u0275nextContext();
      i019.\u0275\u0275twoWayBindingSet(ctx_r1.quizPage, $event) || (ctx_r1.quizPage = $event);
      return i019.\u0275\u0275resetView($event);
    });
    i019.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i019.\u0275\u0275nextContext();
    i019.\u0275\u0275twoWayProperty("quizPage", ctx_r1.quizPage);
    i019.\u0275\u0275property("quiz", ctx_r1.quiz);
  }
}
var _QuizComponent = class _QuizComponent {
  constructor() {
    this.quizPage = 1;
  }
  changeQuizPage() {
    if (this.quizPage === 1)
      this.quizPage = 2;
    else if (this.quizPage === 2)
      this.quizPage = 1;
  }
};
_QuizComponent.\u0275fac = function QuizComponent_Factory(t) {
  return new (t || _QuizComponent)();
};
_QuizComponent.\u0275cmp = /* @__PURE__ */ i019.\u0275\u0275defineComponent({ type: _QuizComponent, selectors: [["app-quiz"]], standalone: true, features: [i019.\u0275\u0275StandaloneFeature], decls: 2, vars: 1, consts: [[3, "quizPage"], [3, "quiz", "quizPageChange", "quizPage"], [3, "quizPageChange", "quizPage", "quiz"]], template: function QuizComponent_Template(rf, ctx) {
  if (rf & 1) {
    i019.\u0275\u0275template(0, QuizComponent_Conditional_0_Template, 1, 1, "start-quiz", 0)(1, QuizComponent_Conditional_1_Template, 1, 2);
  }
  if (rf & 2) {
    i019.\u0275\u0275conditional(0, ctx.quizPage === 1 ? 0 : ctx.quizPage === 2 ? 1 : -1);
  }
}, dependencies: [StartQuizComponent, QuestionsComponent] });
var QuizComponent = _QuizComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i019.\u0275setClassDebugInfo(QuizComponent, { className: "QuizComponent", filePath: "src\\app\\components\\quiz\\quiz.component.ts", lineNumber: 12 });
})();

// src/app/components/not-found/not-found.component.ts
import { Component as Component13 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { RouterModule as RouterModule5 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
import * as i020 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i110 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
var _NotFoundComponent = class _NotFoundComponent {
};
_NotFoundComponent.\u0275fac = function NotFoundComponent_Factory(t) {
  return new (t || _NotFoundComponent)();
};
_NotFoundComponent.\u0275cmp = /* @__PURE__ */ i020.\u0275\u0275defineComponent({ type: _NotFoundComponent, selectors: [["app-not-found"]], standalone: true, features: [i020.\u0275\u0275StandaloneFeature], decls: 8, vars: 1, consts: [[1, "h-full", "w-full", "flex", "flex-col", "justify-center", "items-center", "text-center", "bg-[#fea918]"], [1, "text-white", "sm:text-[15rem]", "text-[10rem]", "sm:h-32", "h-20", 2, "font-family", "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif"], [1, "sm:text-4xl", "text-2xl", "text-white", 2, "font-family", "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif"], ["src", "assets/zz.png", "alt", "", 1, "sm:w-96", "aspect-square", "mr-6"], [1, "sm:text-4xl", "text-2xl", "font-medium", "rounded-full", "text-white", "bg-black", "py-3", "leading-none", "px-12", 2, "font-family", "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif", 3, "routerLink"]], template: function NotFoundComponent_Template(rf, ctx) {
  if (rf & 1) {
    i020.\u0275\u0275elementStart(0, "div", 0)(1, "span", 1);
    i020.\u0275\u0275text(2, "404");
    i020.\u0275\u0275elementEnd();
    i020.\u0275\u0275elementStart(3, "span", 2);
    i020.\u0275\u0275text(4, "Opps... Page Not Found.");
    i020.\u0275\u0275elementEnd();
    i020.\u0275\u0275element(5, "img", 3);
    i020.\u0275\u0275elementStart(6, "a", 4);
    i020.\u0275\u0275text(7, "Go Back");
    i020.\u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    i020.\u0275\u0275advance(6);
    i020.\u0275\u0275property("routerLink", "");
  }
}, dependencies: [RouterModule5, i110.RouterLink] });
var NotFoundComponent = _NotFoundComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i020.\u0275setClassDebugInfo(NotFoundComponent, { className: "NotFoundComponent", filePath: "src\\app\\components\\not-found\\not-found.component.ts", lineNumber: 11 });
})();

// src/app/guards/auth.guard.ts
import { inject } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { Router as Router6 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";

// src/app/services/user-crud.service.ts
import { Injectable as Injectable8 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { HttpHeaders as HttpHeaders7 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import { catchError as catchError6, Subject as Subject6, throwError as throwError6 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs.js?v=7f891212";
import { webSocket as webSocket5 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs_webSocket.js?v=7f891212";
import * as i021 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i210 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
var _UserCRUDService = class _UserCRUDService {
  constructor(storage, http) {
    this.storage = storage;
    this.http = http;
    this.userSubject = new Subject6();
    this.initWebSocket();
  }
  watch() {
    return this.userSubject.asObservable();
  }
  getUsers() {
    let options = this.getStandardOptions();
    const users = this.http.get("http://localhost:3000/api/user", options).pipe(catchError6(this.handleError));
    users.subscribe((res) => {
      this.userSubject.next(res);
    });
    return users;
  }
  initWebSocket() {
    const token = this.storage.getToken();
    const url = `ws://localhost:3000/api/user?token=${token}`;
    this.socket$ = webSocket5(url);
    this.socket$.subscribe((message) => {
      this.userSubject.next(message);
    }, (error) => console.error("WebSocket error:", error), () => console.log("WebSocket connection closed"));
  }
  getStandardOptions() {
    const token = this.storage.getToken();
    return {
      headers: new HttpHeaders7({
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`
      })
    };
  }
  handleError(error) {
    if (error.status === 0) {
      console.error("There is an issue with the client or network", error.error);
    } else {
      console.error("Server-Side-Error: ", error.error);
    }
    return throwError6(() => new Error("Cannot retrieve users from the server. Please try again."));
  }
  getItsPermission() {
    let options = this.getStandardOptions();
    return this.http.get("http://localhost:3000/api/user/permissions", options).pipe(catchError6(this.handleError));
  }
  getUser(id) {
    let options = this.getStandardOptions();
    return this.http.get(`http://localhost:3000/api/user/${id}`, options).pipe(catchError6(this.handleError));
  }
  addUser(payload) {
    let options = this.getStandardOptions();
    return this.http.post(`http://localhost:3000/api/user`, payload, options).pipe(catchError6(this.handleError));
  }
  updateUser(id, payload) {
    let options = this.getStandardOptions();
    return this.http.patch(`http://localhost:3000/api/user/${id}`, payload, options).pipe(catchError6(this.handleError));
  }
  deleteUser(id) {
    let options = this.getStandardOptions();
    return this.http.delete(`http://localhost:3000/api/user/${id}`, options).pipe(catchError6(this.handleError));
  }
};
_UserCRUDService.\u0275fac = function UserCRUDService_Factory(t) {
  return new (t || _UserCRUDService)(i021.\u0275\u0275inject(StorageService), i021.\u0275\u0275inject(i210.HttpClient));
};
_UserCRUDService.\u0275prov = /* @__PURE__ */ i021.\u0275\u0275defineInjectable({ token: _UserCRUDService, factory: _UserCRUDService.\u0275fac, providedIn: "root" });
var UserCRUDService = _UserCRUDService;

// src/app/services/role.service.ts
import { Injectable as Injectable9 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { HttpHeaders as HttpHeaders8 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import { catchError as catchError7, Subject as Subject7, throwError as throwError7 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs.js?v=7f891212";
import { webSocket as webSocket6 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs_webSocket.js?v=7f891212";
import * as i022 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i211 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
var _RoleService = class _RoleService {
  constructor(storage, http) {
    this.storage = storage;
    this.http = http;
    this.roleSubject = new Subject7();
    this.initWebSocket();
  }
  watch() {
    return this.roleSubject.asObservable();
  }
  getRoles() {
    let options = this.getStandardOptions();
    const roles = this.http.get("http://localhost:3000/api/role", options).pipe(catchError7(this.handleError));
    roles.subscribe((res) => {
      this.roleSubject.next(res);
    });
    return roles;
  }
  initWebSocket() {
    const token = this.storage.getToken();
    const url = `ws://localhost:3000/api/role?token=${token}`;
    this.socket$ = webSocket6(url);
    this.socket$.subscribe((message) => {
      this.roleSubject.next(message);
    }, (error) => console.error("WebSocket error:", error), () => console.log("WebSocket connection closed"));
  }
  getStandardOptions() {
    const token = this.storage.getToken();
    return {
      headers: new HttpHeaders8({
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`
      })
    };
  }
  handleError(error) {
    if (error.status === 0) {
      console.error("There is an issue with the client or network", error.error);
    } else {
      console.error("Server-Side-Error: ", error.error);
    }
    return throwError7(() => new Error("Cannot retrieve roles from the server. Please try again."));
  }
  getItsPermission() {
    let options = this.getStandardOptions();
    return this.http.get("http://localhost:3000/api/role/permissions", options).pipe(catchError7(this.handleError));
  }
  getRole(id) {
    let options = this.getStandardOptions();
    return this.http.get(`http://localhost:3000/api/role/${id}`, options).pipe(catchError7(this.handleError));
  }
  addRole(payload) {
    let options = this.getStandardOptions();
    return this.http.post(`http://localhost:3000/api/role`, payload, options).pipe(catchError7(this.handleError));
  }
  updateRole(id, payload) {
    let options = this.getStandardOptions();
    return this.http.patch(`http://localhost:3000/api/role/${id}`, payload, options).pipe(catchError7(this.handleError));
  }
  deleteRole(id) {
    let options = this.getStandardOptions();
    return this.http.delete(`http://localhost:3000/api/role/${id}`, options).pipe(catchError7(this.handleError));
  }
};
_RoleService.\u0275fac = function RoleService_Factory(t) {
  return new (t || _RoleService)(i022.\u0275\u0275inject(StorageService), i022.\u0275\u0275inject(i211.HttpClient));
};
_RoleService.\u0275prov = /* @__PURE__ */ i022.\u0275\u0275defineInjectable({ token: _RoleService, factory: _RoleService.\u0275fac, providedIn: "root" });
var RoleService = _RoleService;

// src/app/guards/auth.guard.ts
var QuizGuard = (route, state) => {
  const router = inject(Router6);
  const storage = inject(StorageService);
  if (storage.getToken()) {
    return true;
  } else {
    router.navigateByUrl("Login");
    return false;
  }
};
var authGuard = (route, state) => {
  const router = inject(Router6);
  const storage = inject(StorageService);
  if (storage.getToken()) {
    router.navigateByUrl("Quiz");
    return false;
  } else {
    return true;
  }
};
var adminGuard = (route, state) => {
  const router = inject(Router6);
  const userService = inject(UserService);
  let user;
  userService.getUser().subscribe((res) => user = res, (err) => console.log(err));
  if (user?.role?.role === "admin") {
    return true;
  } else {
    router.navigateByUrl("settings/settings");
    return false;
  }
};
var roleGuard = (route, state) => {
  const router = inject(Router6);
  const serviceType = route.data["service"];
  let service;
  let permission;
  switch (serviceType) {
    case "users":
      service = inject(UserCRUDService);
      break;
    case "brands":
      service = inject(BrandService);
      break;
    case "models":
      service = inject(ModelService);
      break;
    case "versions":
      service = inject(VersionService);
      break;
    case "roles":
      service = inject(RoleService);
      break;
    default:
      return false;
  }
  return new Promise((resolve, reject) => {
    service.getItsPermission().subscribe((res) => {
      const permission2 = res;
      if (permission2?.Post || permission2?.Delete || permission2?.Patch) {
        resolve(true);
      } else {
        router.navigateByUrl("settings/settings");
        resolve(false);
      }
    }, (err) => {
      console.log(err);
      router.navigateByUrl("settings/settings");
      resolve(false);
    });
  });
};

// src/app/components/settings/settings.component.ts
import { Component as Component16 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { MatSidenavModule } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_sidenav.js?v=7f891212";

// src/app/components/settings/sidebar/sidebar.component.ts
import { Component as Component14 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { RouterModule as RouterModule6 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
import { MatListModule } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_list.js?v=7f891212";
import * as i025 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i111 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";

// src/app/services/feature.service.ts
import { HttpHeaders as HttpHeaders9 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import { Injectable as Injectable10 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { catchError as catchError8, Subject as Subject8, throwError as throwError8 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs.js?v=7f891212";
import * as i023 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i212 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
var _FeatureService = class _FeatureService {
  constructor(storage, http) {
    this.storage = storage;
    this.http = http;
    this.featureSubject = new Subject8();
  }
  getStandardOptions() {
    const token = this.storage.getToken();
    return {
      headers: new HttpHeaders9({
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`
      })
    };
  }
  watch() {
    return this.featureSubject.asObservable();
  }
  getItsPermission() {
    let options = this.getStandardOptions();
    return this.http.get("http://localhost:3000/api/feature/permissions", options).pipe(catchError8(this.handleError));
  }
  getFeatures() {
    let options = this.getStandardOptions();
    const features = this.http.get("http://localhost:3000/api/feature", options).pipe(catchError8(this.handleError));
    features.subscribe((res) => {
      this.featureSubject.next(res);
    });
    return features;
  }
  handleError(error) {
    if (error.status === 0) {
      console.error("There is an issue with the client or network", error.error);
    } else {
      console.error("Server-Side-Error: ", error.error);
    }
    return throwError8(() => new Error("Cannot retrive features from the server. Please try again."));
  }
  getFeature(id) {
    let options = this.getStandardOptions();
    return this.http.get(`http://localhost:3000/api/feature/${id}`, options).pipe(catchError8(this.handleError));
  }
};
_FeatureService.\u0275fac = function FeatureService_Factory(t) {
  return new (t || _FeatureService)(i023.\u0275\u0275inject(StorageService), i023.\u0275\u0275inject(i212.HttpClient));
};
_FeatureService.\u0275prov = /* @__PURE__ */ i023.\u0275\u0275defineInjectable({ token: _FeatureService, factory: _FeatureService.\u0275fac, providedIn: "root" });
var FeatureService = _FeatureService;

// src/app/services/permission.service.ts
import { Injectable as Injectable11 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { HttpHeaders as HttpHeaders10 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
import { catchError as catchError9, Subject as Subject9, throwError as throwError9 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs.js?v=7f891212";
import { webSocket as webSocket7 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/rxjs_webSocket.js?v=7f891212";
import * as i024 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i213 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
var _PermissionService = class _PermissionService {
  constructor(storage, http) {
    this.storage = storage;
    this.http = http;
    this.permissionSubject = new Subject9();
    this.initWebSocket();
  }
  watch() {
    return this.permissionSubject.asObservable();
  }
  getPermissions() {
    let options = this.getStandardOptions();
    const permissions = this.http.get("http://localhost:3000/api/permission", options).pipe(catchError9(this.handleError));
    permissions.subscribe((res) => {
      this.permissionSubject.next(res);
    });
    return permissions;
  }
  initWebSocket() {
    const token = this.storage.getToken();
    const url = `ws://localhost:3000/api/permission?token=${token}`;
    this.socket$ = webSocket7(url);
    this.socket$.subscribe((message) => {
      this.permissionSubject.next(message);
    }, (error) => console.error("WebSocket error:", error), () => console.log("WebSocket connection closed"));
  }
  getStandardOptions() {
    const token = this.storage.getToken();
    return {
      headers: new HttpHeaders10({
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`
      })
    };
  }
  handleError(error) {
    if (error.status === 0) {
      console.error("There is an issue with the client or network", error.error);
    } else {
      console.error("Server-Side-Error: ", error.error);
    }
    return throwError9(() => new Error("Cannot retrieve permissions from the server. Please try again."));
  }
  getPermission(id) {
    let options = this.getStandardOptions();
    return this.http.get(`http://localhost:3000/api/permission/${id}`, options).pipe(catchError9(this.handleError));
  }
  updatePermission(id, payload) {
    let options = this.getStandardOptions();
    return this.http.patch(`http://localhost:3000/api/permission/${id}`, payload, options).pipe(catchError9(this.handleError));
  }
  deletePermission(id) {
    let options = this.getStandardOptions();
    return this.http.delete(`http://localhost:3000/api/permission/${id}`, options).pipe(catchError9(this.handleError));
  }
};
_PermissionService.\u0275fac = function PermissionService_Factory(t) {
  return new (t || _PermissionService)(i024.\u0275\u0275inject(StorageService), i024.\u0275\u0275inject(i213.HttpClient));
};
_PermissionService.\u0275prov = /* @__PURE__ */ i024.\u0275\u0275defineInjectable({ token: _PermissionService, factory: _PermissionService.\u0275fac, providedIn: "root" });
var PermissionService = _PermissionService;

// src/app/components/settings/sidebar/sidebar.component.ts
var _c0 = () => ["/settings/settings"];
var _c1 = () => ["/settings/quizzes"];
var _c2 = () => ["/settings"];
var _c3 = () => ["/settings/users"];
var _c4 = () => ["/settings/brands"];
var _c5 = () => ["/settings/models"];
var _c6 = () => ["/settings/versions"];
var _c7 = () => ["/settings/questions"];
var _c8 = () => ["/settings/features"];
var _c9 = () => ["/settings/permissions"];
var _c10 = () => ["/settings/roles"];
function SidebarComponent_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    i025.\u0275\u0275elementStart(0, "li", 2)(1, "div", 3);
    i025.\u0275\u0275element(2, "img", 8);
    i025.\u0275\u0275elementStart(3, "a", 5);
    i025.\u0275\u0275text(4, "Dashboard");
    i025.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i025.\u0275\u0275nextContext();
    i025.\u0275\u0275property("className", "flex py-3 min-[350px]:w-48 w-40 rounded-xl px-4" + (ctx_r0.getUrl() === "/settings" ? " bg-[#FCC822]" : ""));
    i025.\u0275\u0275advance(3);
    i025.\u0275\u0275property("routerLink", i025.\u0275\u0275pureFunction0(2, _c2));
  }
}
function SidebarComponent_Conditional_8_Template(rf, ctx) {
  if (rf & 1) {
    i025.\u0275\u0275elementStart(0, "li", 2)(1, "div", 3);
    i025.\u0275\u0275element(2, "img", 9);
    i025.\u0275\u0275elementStart(3, "a", 5);
    i025.\u0275\u0275text(4, "Users");
    i025.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i025.\u0275\u0275nextContext();
    i025.\u0275\u0275property("className", "flex py-3 min-[350px]:w-48 w-40 rounded-xl px-4" + (ctx_r0.getUrl() === "/settings/users" ? " bg-[#FCC822]" : ""));
    i025.\u0275\u0275advance(3);
    i025.\u0275\u0275property("routerLink", i025.\u0275\u0275pureFunction0(2, _c3));
  }
}
function SidebarComponent_Conditional_9_Template(rf, ctx) {
  if (rf & 1) {
    i025.\u0275\u0275elementStart(0, "li", 2)(1, "div", 3);
    i025.\u0275\u0275element(2, "img", 10);
    i025.\u0275\u0275elementStart(3, "a", 5);
    i025.\u0275\u0275text(4, "Brands");
    i025.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i025.\u0275\u0275nextContext();
    i025.\u0275\u0275property("className", "flex py-3 min-[350px]:w-48 w-40 rounded-xl px-4" + (ctx_r0.getUrl() === "/settings/brands" ? " bg-[#FCC822]" : ""));
    i025.\u0275\u0275advance(3);
    i025.\u0275\u0275property("routerLink", i025.\u0275\u0275pureFunction0(2, _c4));
  }
}
function SidebarComponent_Conditional_10_Template(rf, ctx) {
  if (rf & 1) {
    i025.\u0275\u0275elementStart(0, "li", 2)(1, "div", 3);
    i025.\u0275\u0275element(2, "img", 11);
    i025.\u0275\u0275elementStart(3, "a", 5);
    i025.\u0275\u0275text(4, "Models");
    i025.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i025.\u0275\u0275nextContext();
    i025.\u0275\u0275property("className", "flex py-3 min-[350px]:w-48 w-40 rounded-xl px-4" + (ctx_r0.getUrl() === "/settings/models" ? " bg-[#FCC822]" : ""));
    i025.\u0275\u0275advance(3);
    i025.\u0275\u0275property("routerLink", i025.\u0275\u0275pureFunction0(2, _c5));
  }
}
function SidebarComponent_Conditional_11_Template(rf, ctx) {
  if (rf & 1) {
    i025.\u0275\u0275elementStart(0, "li", 2)(1, "div", 3);
    i025.\u0275\u0275element(2, "img", 12);
    i025.\u0275\u0275elementStart(3, "a", 5);
    i025.\u0275\u0275text(4, "Versions");
    i025.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i025.\u0275\u0275nextContext();
    i025.\u0275\u0275property("className", "flex py-3 min-[350px]:w-48 w-40 rounded-xl px-4" + (ctx_r0.getUrl() === "/settings/versions" ? " bg-[#FCC822]" : ""));
    i025.\u0275\u0275advance(3);
    i025.\u0275\u0275property("routerLink", i025.\u0275\u0275pureFunction0(2, _c6));
  }
}
function SidebarComponent_Conditional_17_Template(rf, ctx) {
  if (rf & 1) {
    i025.\u0275\u0275elementStart(0, "li", 2)(1, "div", 3);
    i025.\u0275\u0275element(2, "img", 13);
    i025.\u0275\u0275elementStart(3, "a", 5);
    i025.\u0275\u0275text(4, "Questions");
    i025.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i025.\u0275\u0275nextContext();
    i025.\u0275\u0275property("className", "flex py-3 min-[350px]:w-48 w-40 rounded-xl px-4" + (ctx_r0.getUrl() === "/settings/questions" ? " bg-[#FCC822]" : ""));
    i025.\u0275\u0275advance(3);
    i025.\u0275\u0275property("routerLink", i025.\u0275\u0275pureFunction0(2, _c7));
  }
}
function SidebarComponent_Conditional_18_Template(rf, ctx) {
  if (rf & 1) {
    i025.\u0275\u0275elementStart(0, "li", 2)(1, "div", 3);
    i025.\u0275\u0275element(2, "img", 14);
    i025.\u0275\u0275elementStart(3, "a", 5);
    i025.\u0275\u0275text(4, "Features");
    i025.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i025.\u0275\u0275nextContext();
    i025.\u0275\u0275property("className", "flex py-3 min-[350px]:w-48 w-40 rounded-xl px-4" + (ctx_r0.getUrl() === "/settings/features" ? " bg-[#FCC822]" : ""));
    i025.\u0275\u0275advance(3);
    i025.\u0275\u0275property("routerLink", i025.\u0275\u0275pureFunction0(2, _c8));
  }
}
function SidebarComponent_Conditional_19_Template(rf, ctx) {
  if (rf & 1) {
    i025.\u0275\u0275elementStart(0, "li", 2)(1, "div", 3);
    i025.\u0275\u0275element(2, "img", 15);
    i025.\u0275\u0275elementStart(3, "a", 5);
    i025.\u0275\u0275text(4, "Permissions");
    i025.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i025.\u0275\u0275nextContext();
    i025.\u0275\u0275property("className", "flex py-3 min-[350px]:w-48 w-40 rounded-xl px-4" + (ctx_r0.getUrl() === "/settings/permissions" ? " bg-[#FCC822]" : ""));
    i025.\u0275\u0275advance(3);
    i025.\u0275\u0275property("routerLink", i025.\u0275\u0275pureFunction0(2, _c9));
  }
}
function SidebarComponent_Conditional_20_Template(rf, ctx) {
  if (rf & 1) {
    i025.\u0275\u0275elementStart(0, "li", 2)(1, "div", 3);
    i025.\u0275\u0275element(2, "img", 16);
    i025.\u0275\u0275elementStart(3, "a", 5);
    i025.\u0275\u0275text(4, "Roles");
    i025.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i025.\u0275\u0275nextContext();
    i025.\u0275\u0275property("className", "flex py-3 min-[350px]:w-48 w-40 rounded-xl px-4" + (ctx_r0.getUrl() === "/settings/roles" ? " bg-[#FCC822]" : ""));
    i025.\u0275\u0275advance(3);
    i025.\u0275\u0275property("routerLink", i025.\u0275\u0275pureFunction0(2, _c10));
  }
}
var _SidebarComponent = class _SidebarComponent {
  constructor(router, userService, brandService, modelService, versionService, featureService, permissionService, questionService, quizService, roleService, userCRUDService) {
    this.router = router;
    this.userService = userService;
    this.brandService = brandService;
    this.modelService = modelService;
    this.versionService = versionService;
    this.featureService = featureService;
    this.permissionService = permissionService;
    this.questionService = questionService;
    this.quizService = quizService;
    this.roleService = roleService;
    this.userCRUDService = userCRUDService;
    this.permissions = {
      brand: {},
      model: {},
      version: {},
      quiz: {},
      user: {}
    };
  }
  getUrl() {
    return this.router.url;
  }
  ngOnInit() {
    this.userService.getUser().subscribe((res) => this.user = res, (err) => console.log(err));
    this.brandService.getItsPermission().subscribe((res) => {
      this.permissions.brand = res;
    }, (err) => console.log(err));
    this.modelService.getItsPermission().subscribe((res) => this.permissions.model = res, (err) => console.log(err));
    this.versionService.getItsPermission().subscribe((res) => this.permissions.version = res, (err) => console.log(err));
    this.roleService.getItsPermission().subscribe((res) => this.permissions.role = res, (err) => console.log(err));
    this.userCRUDService.getItsPermission().subscribe((res) => this.permissions.user = res, (err) => console.log(err));
  }
};
_SidebarComponent.\u0275fac = function SidebarComponent_Factory(t) {
  return new (t || _SidebarComponent)(i025.\u0275\u0275directiveInject(i111.Router), i025.\u0275\u0275directiveInject(UserService), i025.\u0275\u0275directiveInject(BrandService), i025.\u0275\u0275directiveInject(ModelService), i025.\u0275\u0275directiveInject(VersionService), i025.\u0275\u0275directiveInject(FeatureService), i025.\u0275\u0275directiveInject(PermissionService), i025.\u0275\u0275directiveInject(QuestionService), i025.\u0275\u0275directiveInject(QuizService), i025.\u0275\u0275directiveInject(RoleService), i025.\u0275\u0275directiveInject(UserCRUDService));
};
_SidebarComponent.\u0275cmp = /* @__PURE__ */ i025.\u0275\u0275defineComponent({ type: _SidebarComponent, selectors: [["sidebar"]], standalone: true, features: [i025.\u0275\u0275StandaloneFeature], decls: 22, vars: 15, consts: [[1, "min-[350px]:text-xl", "text-lg", "flex", "flex-col", "font-bold", "justify-between", "h-full", "bg-[#E6E6E6]"], [1, "mx-auto", "flex", "flex-col", "gap-2", "mt-4", "h-full"], [3, "className"], [1, "flex", "gap-2", "items-center", "hover:translate-x-1.5", "hover:duration-200", "hover:ease-in-out"], ["src", "assets/setting.png", "alt", "", 1, "w-fit", "h-fit"], [3, "routerLink"], ["src", "assets/quiz.png", "alt", "", 1, "w-fit", "h-fit"], ["src", "assets/snakeLine.png", "alt", "", 1, "min-[350px]:w-72", "w-52"], ["src", "assets/dashboard.png", "alt", "", 1, "w-fit", "h-fit"], ["src", "assets/user.png", "alt", "", 1, "w-fit", "h-fit"], ["src", "assets/brand.png", "alt", "", 1, "w-fit", "h-fit"], ["src", "assets/model.png", "alt", "", 1, "w-fit", "h-fit"], ["src", "assets/version.png", "alt", "", 1, "w-fit", "h-fit"], ["src", "assets/question.png", "alt", "", 1, "w-fit", "h-fit"], ["src", "assets/feature.png", "alt", "", 1, "w-fit", "h-fit"], ["src", "assets/lock.png", "alt", "", 1, "w-fit", "h-fit"], ["src", "assets/role.png", "alt", "", 1, "w-fit", "h-fit"]], template: function SidebarComponent_Template(rf, ctx) {
  if (rf & 1) {
    i025.\u0275\u0275elementStart(0, "div", 0)(1, "div", 1);
    i025.\u0275\u0275template(2, SidebarComponent_Conditional_2_Template, 5, 3, "li", 2);
    i025.\u0275\u0275elementStart(3, "li", 2)(4, "div", 3);
    i025.\u0275\u0275element(5, "img", 4);
    i025.\u0275\u0275elementStart(6, "a", 5);
    i025.\u0275\u0275text(7, "Settings");
    i025.\u0275\u0275elementEnd()()();
    i025.\u0275\u0275template(8, SidebarComponent_Conditional_8_Template, 5, 3, "li", 2)(9, SidebarComponent_Conditional_9_Template, 5, 3, "li", 2)(10, SidebarComponent_Conditional_10_Template, 5, 3, "li", 2)(11, SidebarComponent_Conditional_11_Template, 5, 3, "li", 2);
    i025.\u0275\u0275elementStart(12, "li", 2)(13, "div", 3);
    i025.\u0275\u0275element(14, "img", 6);
    i025.\u0275\u0275elementStart(15, "a", 5);
    i025.\u0275\u0275text(16, "Quizzes");
    i025.\u0275\u0275elementEnd()()();
    i025.\u0275\u0275template(17, SidebarComponent_Conditional_17_Template, 5, 3, "li", 2)(18, SidebarComponent_Conditional_18_Template, 5, 3, "li", 2)(19, SidebarComponent_Conditional_19_Template, 5, 3, "li", 2)(20, SidebarComponent_Conditional_20_Template, 5, 3, "li", 2);
    i025.\u0275\u0275elementEnd();
    i025.\u0275\u0275element(21, "img", 7);
    i025.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    i025.\u0275\u0275advance(2);
    i025.\u0275\u0275conditional(2, (ctx.user == null ? null : ctx.user.role == null ? null : ctx.user.role.role) === "admin" ? 2 : -1);
    i025.\u0275\u0275advance();
    i025.\u0275\u0275property("className", "flex py-3 min-[350px]:w-48 w-40 rounded-xl px-4" + (ctx.getUrl() === "/settings/settings" ? " bg-[#FCC822]" : ""));
    i025.\u0275\u0275advance(3);
    i025.\u0275\u0275property("routerLink", i025.\u0275\u0275pureFunction0(13, _c0));
    i025.\u0275\u0275advance(2);
    i025.\u0275\u0275conditional(8, (ctx.permissions == null ? null : ctx.permissions.user == null ? null : ctx.permissions.user.Post) ? 8 : -1);
    i025.\u0275\u0275advance();
    i025.\u0275\u0275conditional(9, (ctx.permissions == null ? null : ctx.permissions.brand == null ? null : ctx.permissions.brand.Post) ? 9 : -1);
    i025.\u0275\u0275advance();
    i025.\u0275\u0275conditional(10, (ctx.permissions == null ? null : ctx.permissions.model == null ? null : ctx.permissions.model.Post) ? 10 : -1);
    i025.\u0275\u0275advance();
    i025.\u0275\u0275conditional(11, (ctx.permissions == null ? null : ctx.permissions.version == null ? null : ctx.permissions.version.Post) ? 11 : -1);
    i025.\u0275\u0275advance();
    i025.\u0275\u0275property("className", "flex py-3 min-[350px]:w-48 w-40 rounded-xl px-4" + (ctx.getUrl() === "/settings/quizzes" ? " bg-[#FCC822]" : ""));
    i025.\u0275\u0275advance(3);
    i025.\u0275\u0275property("routerLink", i025.\u0275\u0275pureFunction0(14, _c1));
    i025.\u0275\u0275advance(2);
    i025.\u0275\u0275conditional(17, (ctx.user == null ? null : ctx.user.role == null ? null : ctx.user.role.role) === "admin" ? 17 : -1);
    i025.\u0275\u0275advance();
    i025.\u0275\u0275conditional(18, (ctx.user == null ? null : ctx.user.role == null ? null : ctx.user.role.role) === "admin" ? 18 : -1);
    i025.\u0275\u0275advance();
    i025.\u0275\u0275conditional(19, (ctx.user == null ? null : ctx.user.role == null ? null : ctx.user.role.role) === "admin" ? 19 : -1);
    i025.\u0275\u0275advance();
    i025.\u0275\u0275conditional(20, (ctx.permissions == null ? null : ctx.permissions.role == null ? null : ctx.permissions.role.Post) ? 20 : -1);
  }
}, dependencies: [RouterModule6, i111.RouterLink, MatListModule] });
var SidebarComponent = _SidebarComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i025.\u0275setClassDebugInfo(SidebarComponent, { className: "SidebarComponent", filePath: "src\\app\\components\\settings\\sidebar\\sidebar.component.ts", lineNumber: 22 });
})();

// src/app/components/settings/settings.component.ts
import { RouterOutlet as RouterOutlet2 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";

// src/app/components/settings/navv/navv.component.ts
import { Component as Component15, EventEmitter as EventEmitter3, Input as Input5, Output as Output3 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { RouterModule as RouterModule7 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
import * as i026 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i112 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
function NavvComponent_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    i026.\u0275\u0275elementStart(0, "a", 7);
    i026.\u0275\u0275text(1, " Login ");
    i026.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    i026.\u0275\u0275property("routerLink", "/Login");
  }
}
function NavvComponent_Conditional_8_Template(rf, ctx) {
  if (rf & 1) {
    i026.\u0275\u0275element(0, "profile");
  }
}
var _NavvComponent = class _NavvComponent {
  constructor(router, storageService, userService) {
    this.router = router;
    this.storageService = storageService;
    this.userService = userService;
    this.authenticated = !this.storageService.getToken();
    this.settings = false;
    this.openChange = new EventEmitter3();
  }
  ngOnInit() {
    this.storageService.watchToken().subscribe((token) => {
      this.authenticated = !this.storageService.getToken();
    });
    this.userService.setUser();
  }
  toggleSideBar() {
    this.openChange.emit(!this.open);
  }
};
_NavvComponent.\u0275fac = function NavvComponent_Factory(t) {
  return new (t || _NavvComponent)(i026.\u0275\u0275directiveInject(i112.Router), i026.\u0275\u0275directiveInject(StorageService), i026.\u0275\u0275directiveInject(UserService));
};
_NavvComponent.\u0275cmp = /* @__PURE__ */ i026.\u0275\u0275defineComponent({ type: _NavvComponent, selectors: [["navv"]], inputs: { open: "open" }, outputs: { openChange: "openChange" }, standalone: true, features: [i026.\u0275\u0275StandaloneFeature], decls: 9, vars: 1, consts: [[1, "flex", "justify-between", "items-center", "sm:p-8", "p-4", "border-b", "border-b-[#ECECE8]", "sm:text-xl", "text-sm", "font-bold", "sm:font-normal", "gap-3"], [1, "flex", "sm:gap-10", "gap-3"], [3, "click"], ["src", "assets/sidebar.png", "alt", ""], ["routerLink", ""], ["src", "assets/logo.png", "alt", "logo"], [1, "flex", "items-center", "sm:gap-10", "gap-3", "sm:font-medium", "font-bold"], [1, "btn-sun", 3, "routerLink"]], template: function NavvComponent_Template(rf, ctx) {
  if (rf & 1) {
    i026.\u0275\u0275elementStart(0, "nav", 0)(1, "div", 1)(2, "button", 2);
    i026.\u0275\u0275listener("click", function NavvComponent_Template_button_click_2_listener() {
      return ctx.toggleSideBar();
    });
    i026.\u0275\u0275element(3, "img", 3);
    i026.\u0275\u0275elementEnd();
    i026.\u0275\u0275elementStart(4, "a", 4);
    i026.\u0275\u0275element(5, "img", 5);
    i026.\u0275\u0275elementEnd()();
    i026.\u0275\u0275elementStart(6, "div", 6);
    i026.\u0275\u0275template(7, NavvComponent_Conditional_7_Template, 2, 1, "a", 7)(8, NavvComponent_Conditional_8_Template, 1, 0);
    i026.\u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    i026.\u0275\u0275advance(7);
    i026.\u0275\u0275conditional(7, ctx.authenticated ? 7 : 8);
  }
}, dependencies: [RouterModule7, i112.RouterLink, ProfileComponent] });
var NavvComponent = _NavvComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i026.\u0275setClassDebugInfo(NavvComponent, { className: "NavvComponent", filePath: "src\\app\\components\\settings\\navv\\navv.component.ts", lineNumber: 14 });
})();

// src/app/components/settings/settings.component.ts
import * as i027 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i113 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_cdk_layout.js?v=7f891212";
import * as i32 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_sidenav.js?v=7f891212";
var _SettingsComponent = class _SettingsComponent {
  constructor(changeDetectorRef, media, userService) {
    this.userService = userService;
    this.open = true;
    this.mobileQuery = media.matchMedia("(max-width: 740px)");
    this._mobileQueryListener = () => changeDetectorRef.detectChanges();
    this.mobileQuery.addListener(this._mobileQueryListener);
  }
  ngOnInit() {
    this.userService.getUser().subscribe((res) => this.user = res, (err) => console.log(err));
  }
  ngOnDestroy() {
    this.mobileQuery.removeListener(this._mobileQueryListener);
  }
  toggleSideBar() {
    this.open = !this.open;
  }
};
_SettingsComponent.\u0275fac = function SettingsComponent_Factory(t) {
  return new (t || _SettingsComponent)(i027.\u0275\u0275directiveInject(i027.ChangeDetectorRef), i027.\u0275\u0275directiveInject(i113.MediaMatcher), i027.\u0275\u0275directiveInject(UserService));
};
_SettingsComponent.\u0275cmp = /* @__PURE__ */ i027.\u0275\u0275defineComponent({ type: _SettingsComponent, selectors: [["app-settings"]], standalone: true, features: [i027.\u0275\u0275StandaloneFeature], decls: 12, vars: 4, consts: [["snav", ""], [1, "h-screen", "flex", "flex-col"], [1, "flex-initial", 3, "openChange", "open"], [1, "flex-auto"], [1, "h-full", 2, "background-color", "white"], ["role", "navigation", 3, "mode", "opened"], [2, "height", "fit-content"], [1, "@container", "mx-auto", "px-4", "flex", "flex-col", "gap-6", "py-5", "bg-white", "h-full"], [1, "text-4xl", "font-black"]], template: function SettingsComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i027.\u0275\u0275getCurrentView();
    i027.\u0275\u0275elementStart(0, "div", 1)(1, "navv", 2);
    i027.\u0275\u0275twoWayListener("openChange", function SettingsComponent_Template_navv_openChange_1_listener($event) {
      i027.\u0275\u0275restoreView(_r1);
      i027.\u0275\u0275twoWayBindingSet(ctx.open, $event) || (ctx.open = $event);
      return i027.\u0275\u0275resetView($event);
    });
    i027.\u0275\u0275elementEnd();
    i027.\u0275\u0275elementStart(2, "section", 3)(3, "mat-drawer-container", 4)(4, "mat-drawer", 5, 0);
    i027.\u0275\u0275element(6, "sidebar");
    i027.\u0275\u0275elementEnd();
    i027.\u0275\u0275elementStart(7, "mat-drawer-content", 6)(8, "div", 7)(9, "span", 8);
    i027.\u0275\u0275text(10);
    i027.\u0275\u0275elementEnd();
    i027.\u0275\u0275element(11, "router-outlet");
    i027.\u0275\u0275elementEnd()()()()();
  }
  if (rf & 2) {
    i027.\u0275\u0275advance();
    i027.\u0275\u0275twoWayProperty("open", ctx.open);
    i027.\u0275\u0275advance(3);
    i027.\u0275\u0275property("mode", ctx.mobileQuery.matches ? "over" : "side")("opened", ctx.mobileQuery.matches ? !ctx.open : ctx.open);
    i027.\u0275\u0275advance(6);
    i027.\u0275\u0275textInterpolate1("", ctx.user == null ? null : ctx.user.role == null ? null : ctx.user.role.role, " Dashboard");
  }
}, dependencies: [NavvComponent, MatSidenavModule, i32.MatDrawer, i32.MatDrawerContainer, i32.MatDrawerContent, SidebarComponent, RouterOutlet2] });
var SettingsComponent = _SettingsComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i027.\u0275setClassDebugInfo(SettingsComponent, { className: "SettingsComponent", filePath: "src\\app\\components\\settings\\settings.component.ts", lineNumber: 16 });
})();

// src/app/components/settings/dashboard/dashboard.component.ts
import { Component as Component17 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i028 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
function DashboardComponent_For_2_Template(rf, ctx) {
  if (rf & 1) {
    i028.\u0275\u0275elementStart(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "span", 4);
    i028.\u0275\u0275text(4);
    i028.\u0275\u0275elementEnd();
    i028.\u0275\u0275elementStart(5, "span", 5);
    i028.\u0275\u0275text(6);
    i028.\u0275\u0275elementEnd()();
    i028.\u0275\u0275element(7, "img", 6);
    i028.\u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const item_r1 = ctx.$implicit;
    i028.\u0275\u0275advance(4);
    i028.\u0275\u0275textInterpolate1("Total ", item_r1.type, "");
    i028.\u0275\u0275advance(2);
    i028.\u0275\u0275textInterpolate1(" ", item_r1.num, " ");
    i028.\u0275\u0275advance();
    i028.\u0275\u0275property("src", "assets/" + item_r1.type + ".png", i028.\u0275\u0275sanitizeUrl);
  }
}
var _DashboardComponent = class _DashboardComponent {
  constructor(brandService, modelService, versionService, featureService, permissionService, questionService, quizService, roleService, userCRUDService) {
    this.brandService = brandService;
    this.modelService = modelService;
    this.versionService = versionService;
    this.featureService = featureService;
    this.permissionService = permissionService;
    this.questionService = questionService;
    this.quizService = quizService;
    this.roleService = roleService;
    this.userCRUDService = userCRUDService;
    this.data = [
      { type: "Users", num: 0 },
      { type: "Brands", num: 0 },
      { type: "Models", num: 0 },
      { type: "Versions", num: 0 },
      { type: "Features", num: 0 },
      { type: "Permissions", num: 0 },
      { type: "Questions", num: 0 },
      { type: "Quizzes", num: 0 },
      { type: "Roles", num: 0 }
    ];
  }
  ngOnInit() {
    this.brandService.getBrands().subscribe((res) => {
      this.data[1].num = res.length;
    }, (err) => console.log(err));
    this.userCRUDService.getUsers().subscribe((res) => {
      this.data[0].num = res.length;
    }, (err) => console.log(err));
    this.modelService.getModels().subscribe((res) => {
      this.data[2].num = res.length;
    }, (err) => console.log(err));
    this.versionService.getVersions().subscribe((res) => {
      this.data[3].num = res.length;
    }, (err) => console.log(err));
    this.featureService.getFeatures().subscribe((res) => {
      this.data[4].num = res.length;
    }, (err) => console.log(err));
    this.permissionService.getPermissions().subscribe((res) => {
      this.data[5].num = res.length;
    }, (err) => console.log(err));
    this.questionService.getQuestions().subscribe((res) => {
      this.data[6].num = res.length;
    }, (err) => console.log(err));
    this.quizService.getQuizzes().subscribe((res) => {
      this.data[7].num = res.length;
    }, (err) => console.log(err));
    this.roleService.getRoles().subscribe((res) => {
      this.data[8].num = res.length;
    }, (err) => console.log(err));
  }
};
_DashboardComponent.\u0275fac = function DashboardComponent_Factory(t) {
  return new (t || _DashboardComponent)(i028.\u0275\u0275directiveInject(BrandService), i028.\u0275\u0275directiveInject(ModelService), i028.\u0275\u0275directiveInject(VersionService), i028.\u0275\u0275directiveInject(FeatureService), i028.\u0275\u0275directiveInject(PermissionService), i028.\u0275\u0275directiveInject(QuestionService), i028.\u0275\u0275directiveInject(QuizService), i028.\u0275\u0275directiveInject(RoleService), i028.\u0275\u0275directiveInject(UserCRUDService));
};
_DashboardComponent.\u0275cmp = /* @__PURE__ */ i028.\u0275\u0275defineComponent({ type: _DashboardComponent, selectors: [["app-dashboard"]], standalone: true, features: [i028.\u0275\u0275StandaloneFeature], decls: 3, vars: 0, consts: [[1, "grid", "@4xl:grid-cols-3", "@xl:grid-cols-2", "gap-x-5", "gap-y-9", "h-fit"], [1, "flex", "justify-center", "w-full"], [1, "flex", "drop-shadow-dashboard", "rounded-2xl", "bg-white", "px-6", "py-16", "max-w-96", "justify-between", "items-center", "w-full"], [1, "flex", "flex-col", "gap-3"], [1, "text-[#888888]", "text-xl", "leading-none"], [1, "font-bold", "text-4xl"], ["alt", "icon", 1, "w-fit", "h-fit", 3, "src"]], template: function DashboardComponent_Template(rf, ctx) {
  if (rf & 1) {
    i028.\u0275\u0275elementStart(0, "div", 0);
    i028.\u0275\u0275repeaterCreate(1, DashboardComponent_For_2_Template, 8, 3, "div", 1, i028.\u0275\u0275repeaterTrackByIndex);
    i028.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    i028.\u0275\u0275advance();
    i028.\u0275\u0275repeater(ctx.data);
  }
} });
var DashboardComponent = _DashboardComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i028.\u0275setClassDebugInfo(DashboardComponent, { className: "DashboardComponent", filePath: "src\\app\\components\\settings\\dashboard\\dashboard.component.ts", lineNumber: 19 });
})();

// src/app/components/settings/users/users.component.ts
import { Component as Component18, ViewChild } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { MatSort, MatSortModule } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_sort.js?v=7f891212";
import { MatTableDataSource, MatTableModule } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_table.js?v=7f891212";
import * as i029 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i214 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_cdk_a11y.js?v=7f891212";
import * as i42 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_table.js?v=7f891212";
import * as i53 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_material_sort.js?v=7f891212";
function UsersComponent_th_10_Template(rf, ctx) {
  if (rf & 1) {
    i029.\u0275\u0275elementStart(0, "th", 19);
    i029.\u0275\u0275text(1, " _id ");
    i029.\u0275\u0275elementEnd();
  }
}
function UsersComponent_td_11_Template(rf, ctx) {
  if (rf & 1) {
    i029.\u0275\u0275elementStart(0, "td", 20);
    i029.\u0275\u0275text(1);
    i029.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const element_r1 = ctx.$implicit;
    i029.\u0275\u0275advance();
    i029.\u0275\u0275textInterpolate1(" ", element_r1._id, " ");
  }
}
function UsersComponent_th_13_Template(rf, ctx) {
  if (rf & 1) {
    i029.\u0275\u0275elementStart(0, "th", 21);
    i029.\u0275\u0275text(1, " FullName ");
    i029.\u0275\u0275elementEnd();
  }
}
function UsersComponent_td_14_Template(rf, ctx) {
  if (rf & 1) {
    i029.\u0275\u0275elementStart(0, "td", 20);
    i029.\u0275\u0275text(1);
    i029.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const element_r2 = ctx.$implicit;
    i029.\u0275\u0275advance();
    i029.\u0275\u0275textInterpolate1(" ", element_r2.fullName, " ");
  }
}
function UsersComponent_th_16_Template(rf, ctx) {
  if (rf & 1) {
    i029.\u0275\u0275elementStart(0, "th", 22);
    i029.\u0275\u0275text(1, " Email ");
    i029.\u0275\u0275elementEnd();
  }
}
function UsersComponent_td_17_Template(rf, ctx) {
  if (rf & 1) {
    i029.\u0275\u0275elementStart(0, "td", 20);
    i029.\u0275\u0275text(1);
    i029.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const element_r3 = ctx.$implicit;
    i029.\u0275\u0275advance();
    i029.\u0275\u0275textInterpolate1(" ", element_r3.email, " ");
  }
}
function UsersComponent_th_19_Template(rf, ctx) {
  if (rf & 1) {
    i029.\u0275\u0275elementStart(0, "th", 23);
    i029.\u0275\u0275text(1, " Role ");
    i029.\u0275\u0275elementEnd();
  }
}
function UsersComponent_td_20_Template(rf, ctx) {
  if (rf & 1) {
    i029.\u0275\u0275elementStart(0, "td", 20);
    i029.\u0275\u0275text(1);
    i029.\u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const element_r4 = ctx.$implicit;
    i029.\u0275\u0275advance();
    i029.\u0275\u0275textInterpolate1(" ", element_r4.role, " ");
  }
}
function UsersComponent_tr_21_Template(rf, ctx) {
  if (rf & 1) {
    i029.\u0275\u0275element(0, "tr", 24);
  }
}
function UsersComponent_tr_22_Template(rf, ctx) {
  if (rf & 1) {
    i029.\u0275\u0275element(0, "tr", 25);
  }
}
var _UsersComponent = class _UsersComponent {
  constructor(userCRUDService, _liveAnnouncer, roleService) {
    this.userCRUDService = userCRUDService;
    this._liveAnnouncer = _liveAnnouncer;
    this.roleService = roleService;
    this.displayedColumns = ["_id", "fullName", "email", "role"];
    this.dataSource = new MatTableDataSource();
  }
  ngOnInit() {
    this.userCRUDService.getUsers().subscribe((res) => {
      this.users = res;
      this.dataSource.data = res;
      console.log(res);
    }, (err) => console.log(err));
    this.roleService.getRoles().subscribe((res) => {
    });
  }
  ngAfterViewInit() {
    this.dataSource.sort = this.sort;
  }
  announceSortChange(sortState) {
    if (sortState.direction) {
      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);
    } else {
      this._liveAnnouncer.announce("Sorting cleared");
    }
  }
};
_UsersComponent.\u0275fac = function UsersComponent_Factory(t) {
  return new (t || _UsersComponent)(i029.\u0275\u0275directiveInject(UserCRUDService), i029.\u0275\u0275directiveInject(i214.LiveAnnouncer), i029.\u0275\u0275directiveInject(RoleService));
};
_UsersComponent.\u0275cmp = /* @__PURE__ */ i029.\u0275\u0275defineComponent({ type: _UsersComponent, selectors: [["app-users"]], viewQuery: function UsersComponent_Query(rf, ctx) {
  if (rf & 1) {
    i029.\u0275\u0275viewQuery(MatSort, 5);
  }
  if (rf & 2) {
    let _t;
    i029.\u0275\u0275queryRefresh(_t = i029.\u0275\u0275loadQuery()) && (ctx.sort = _t.first);
  }
}, standalone: true, features: [i029.\u0275\u0275StandaloneFeature], decls: 23, vars: 3, consts: [[1, "flex", "flex-col", "justify-between", "gap-20"], [1, "flex", "w-96", "relative", "border", "border-[#C1BBBB]", "rounded-full", "mx-auto"], ["type", "text", "id", "search", "placeholder", " ", 1, "block", "px-2.5", "pb-2.5", "pt-5", "w-full", "font-semibold", "min-[400px]:text-lg", "focus:border-l-2", "focus:border-[#fcc822]", "rounded-full", "appearance-none", "focus:outline-none", "focus:ring-0", "peer", "text-sun"], ["for", "search", 1, "absolute", "min-[400px]:text-base", "text-sm", "text-gray-300", "duration-300", "transform", "-translate-y-4", "scale-75", "top-4", "z-10", "origin-[0]", "start-2.5", "peer-placeholder-shown:scale-100", "peer-placeholder-shown:translate-y-0", "peer-focus:scale-75", "peer-focus:-translate-y-4", "rtl:peer-focus:translate-x-1/4", "rtl:peer-focus:left-auto", "cursor-text"], [1, "px-2"], ["src", "assets/search.png", "alt", "", 1, "w-fit", "h-fit"], [1, "max-w-[800px]", "mx-auto", "h-full", "rounded-3xl"], ["mat-table", "", "matSort", "", 1, "mat-elevation-z8", 2, "border-radius", "1.5rem", 3, "matSortChange", "dataSource"], ["matColumnDef", "_id"], ["mat-header-cell", "", "mat-sort-header", "", "sortActionDescription", "Sort by _id", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "fullName"], ["mat-header-cell", "", "mat-sort-header", "", "sortActionDescription", "Sort by fullName", 4, "matHeaderCellDef"], ["matColumnDef", "email"], ["mat-header-cell", "", "mat-sort-header", "", "sortActionDescription", "Sort by email", 4, "matHeaderCellDef"], ["matColumnDef", "role"], ["mat-header-cell", "", "mat-sort-header", "", "sortActionDescription", "Sort by role", 4, "matHeaderCellDef"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["mat-header-cell", "", "mat-sort-header", "", "sortActionDescription", "Sort by _id"], ["mat-cell", ""], ["mat-header-cell", "", "mat-sort-header", "", "sortActionDescription", "Sort by fullName"], ["mat-header-cell", "", "mat-sort-header", "", "sortActionDescription", "Sort by email"], ["mat-header-cell", "", "mat-sort-header", "", "sortActionDescription", "Sort by role"], ["mat-header-row", ""], ["mat-row", ""]], template: function UsersComponent_Template(rf, ctx) {
  if (rf & 1) {
    i029.\u0275\u0275elementStart(0, "div", 0)(1, "form", 1);
    i029.\u0275\u0275element(2, "input", 2);
    i029.\u0275\u0275elementStart(3, "label", 3);
    i029.\u0275\u0275text(4, "Search ");
    i029.\u0275\u0275elementEnd();
    i029.\u0275\u0275elementStart(5, "button", 4);
    i029.\u0275\u0275element(6, "img", 5);
    i029.\u0275\u0275elementEnd()();
    i029.\u0275\u0275elementStart(7, "div", 6)(8, "table", 7);
    i029.\u0275\u0275listener("matSortChange", function UsersComponent_Template_table_matSortChange_8_listener($event) {
      return ctx.announceSortChange($event);
    });
    i029.\u0275\u0275elementContainerStart(9, 8);
    i029.\u0275\u0275template(10, UsersComponent_th_10_Template, 2, 0, "th", 9)(11, UsersComponent_td_11_Template, 2, 1, "td", 10);
    i029.\u0275\u0275elementContainerEnd();
    i029.\u0275\u0275elementContainerStart(12, 11);
    i029.\u0275\u0275template(13, UsersComponent_th_13_Template, 2, 0, "th", 12)(14, UsersComponent_td_14_Template, 2, 1, "td", 10);
    i029.\u0275\u0275elementContainerEnd();
    i029.\u0275\u0275elementContainerStart(15, 13);
    i029.\u0275\u0275template(16, UsersComponent_th_16_Template, 2, 0, "th", 14)(17, UsersComponent_td_17_Template, 2, 1, "td", 10);
    i029.\u0275\u0275elementContainerEnd();
    i029.\u0275\u0275elementContainerStart(18, 15);
    i029.\u0275\u0275template(19, UsersComponent_th_19_Template, 2, 0, "th", 16)(20, UsersComponent_td_20_Template, 2, 1, "td", 10);
    i029.\u0275\u0275elementContainerEnd();
    i029.\u0275\u0275template(21, UsersComponent_tr_21_Template, 1, 0, "tr", 17)(22, UsersComponent_tr_22_Template, 1, 0, "tr", 18);
    i029.\u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    i029.\u0275\u0275advance(8);
    i029.\u0275\u0275property("dataSource", ctx.dataSource);
    i029.\u0275\u0275advance(13);
    i029.\u0275\u0275property("matHeaderRowDef", ctx.displayedColumns);
    i029.\u0275\u0275advance();
    i029.\u0275\u0275property("matRowDefColumns", ctx.displayedColumns);
  }
}, dependencies: [MatTableModule, i42.MatTable, i42.MatHeaderCellDef, i42.MatHeaderRowDef, i42.MatColumnDef, i42.MatCellDef, i42.MatRowDef, i42.MatHeaderCell, i42.MatCell, i42.MatHeaderRow, i42.MatRow, MatSortModule, i53.MatSort, i53.MatSortHeader] });
var UsersComponent = _UsersComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i029.\u0275setClassDebugInfo(UsersComponent, { className: "UsersComponent", filePath: "src\\app\\components\\settings\\users\\users.component.ts", lineNumber: 22 });
})();

// src/app/components/settings/brands/brands.component.ts
import { Component as Component19 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i030 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
var _BrandsComponent = class _BrandsComponent {
};
_BrandsComponent.\u0275fac = function BrandsComponent_Factory(t) {
  return new (t || _BrandsComponent)();
};
_BrandsComponent.\u0275cmp = /* @__PURE__ */ i030.\u0275\u0275defineComponent({ type: _BrandsComponent, selectors: [["app-brands"]], standalone: true, features: [i030.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function BrandsComponent_Template(rf, ctx) {
  if (rf & 1) {
    i030.\u0275\u0275elementStart(0, "p");
    i030.\u0275\u0275text(1, "brands works!");
    i030.\u0275\u0275elementEnd();
  }
} });
var BrandsComponent = _BrandsComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i030.\u0275setClassDebugInfo(BrandsComponent, { className: "BrandsComponent", filePath: "src\\app\\components\\settings\\brands\\brands.component.ts", lineNumber: 10 });
})();

// src/app/components/settings/models/models.component.ts
import { Component as Component20 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i031 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
var _ModelsComponent = class _ModelsComponent {
};
_ModelsComponent.\u0275fac = function ModelsComponent_Factory(t) {
  return new (t || _ModelsComponent)();
};
_ModelsComponent.\u0275cmp = /* @__PURE__ */ i031.\u0275\u0275defineComponent({ type: _ModelsComponent, selectors: [["app-models"]], standalone: true, features: [i031.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function ModelsComponent_Template(rf, ctx) {
  if (rf & 1) {
    i031.\u0275\u0275elementStart(0, "p");
    i031.\u0275\u0275text(1, "models works!");
    i031.\u0275\u0275elementEnd();
  }
} });
var ModelsComponent = _ModelsComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i031.\u0275setClassDebugInfo(ModelsComponent, { className: "ModelsComponent", filePath: "src\\app\\components\\settings\\models\\models.component.ts", lineNumber: 10 });
})();

// src/app/components/settings/quizzes/quizzes.component.ts
import { Component as Component21 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i032 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
var _QuizzesComponent = class _QuizzesComponent {
};
_QuizzesComponent.\u0275fac = function QuizzesComponent_Factory(t) {
  return new (t || _QuizzesComponent)();
};
_QuizzesComponent.\u0275cmp = /* @__PURE__ */ i032.\u0275\u0275defineComponent({ type: _QuizzesComponent, selectors: [["app-quizzes"]], standalone: true, features: [i032.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function QuizzesComponent_Template(rf, ctx) {
  if (rf & 1) {
    i032.\u0275\u0275elementStart(0, "p");
    i032.\u0275\u0275text(1, "quizzes works!");
    i032.\u0275\u0275elementEnd();
  }
} });
var QuizzesComponent = _QuizzesComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i032.\u0275setClassDebugInfo(QuizzesComponent, { className: "QuizzesComponent", filePath: "src\\app\\components\\settings\\quizzes\\quizzes.component.ts", lineNumber: 10 });
})();

// src/app/components/settings/versions/versions.component.ts
import { Component as Component22 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i033 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
var _VersionsComponent = class _VersionsComponent {
};
_VersionsComponent.\u0275fac = function VersionsComponent_Factory(t) {
  return new (t || _VersionsComponent)();
};
_VersionsComponent.\u0275cmp = /* @__PURE__ */ i033.\u0275\u0275defineComponent({ type: _VersionsComponent, selectors: [["app-versions"]], standalone: true, features: [i033.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function VersionsComponent_Template(rf, ctx) {
  if (rf & 1) {
    i033.\u0275\u0275elementStart(0, "p");
    i033.\u0275\u0275text(1, "versions works!");
    i033.\u0275\u0275elementEnd();
  }
} });
var VersionsComponent = _VersionsComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i033.\u0275setClassDebugInfo(VersionsComponent, { className: "VersionsComponent", filePath: "src\\app\\components\\settings\\versions\\versions.component.ts", lineNumber: 10 });
})();

// src/app/components/settings/questions/questions.component.ts
import { Component as Component23 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i034 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
var _QuestionsComponent2 = class _QuestionsComponent2 {
};
_QuestionsComponent2.\u0275fac = function QuestionsComponent_Factory(t) {
  return new (t || _QuestionsComponent2)();
};
_QuestionsComponent2.\u0275cmp = /* @__PURE__ */ i034.\u0275\u0275defineComponent({ type: _QuestionsComponent2, selectors: [["app-questions"]], standalone: true, features: [i034.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function QuestionsComponent_Template(rf, ctx) {
  if (rf & 1) {
    i034.\u0275\u0275elementStart(0, "p");
    i034.\u0275\u0275text(1, "questions works!");
    i034.\u0275\u0275elementEnd();
  }
} });
var QuestionsComponent2 = _QuestionsComponent2;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i034.\u0275setClassDebugInfo(QuestionsComponent2, { className: "QuestionsComponent", filePath: "src\\app\\components\\settings\\questions\\questions.component.ts", lineNumber: 10 });
})();

// src/app/components/settings/features/features.component.ts
import { Component as Component24 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i035 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
var _FeaturesComponent = class _FeaturesComponent {
};
_FeaturesComponent.\u0275fac = function FeaturesComponent_Factory(t) {
  return new (t || _FeaturesComponent)();
};
_FeaturesComponent.\u0275cmp = /* @__PURE__ */ i035.\u0275\u0275defineComponent({ type: _FeaturesComponent, selectors: [["app-features"]], standalone: true, features: [i035.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function FeaturesComponent_Template(rf, ctx) {
  if (rf & 1) {
    i035.\u0275\u0275elementStart(0, "p");
    i035.\u0275\u0275text(1, "features works!");
    i035.\u0275\u0275elementEnd();
  }
} });
var FeaturesComponent = _FeaturesComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i035.\u0275setClassDebugInfo(FeaturesComponent, { className: "FeaturesComponent", filePath: "src\\app\\components\\settings\\features\\features.component.ts", lineNumber: 10 });
})();

// src/app/components/settings/permissions/permissions.component.ts
import { Component as Component25 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i036 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
var _PermissionsComponent = class _PermissionsComponent {
};
_PermissionsComponent.\u0275fac = function PermissionsComponent_Factory(t) {
  return new (t || _PermissionsComponent)();
};
_PermissionsComponent.\u0275cmp = /* @__PURE__ */ i036.\u0275\u0275defineComponent({ type: _PermissionsComponent, selectors: [["app-permissions"]], standalone: true, features: [i036.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function PermissionsComponent_Template(rf, ctx) {
  if (rf & 1) {
    i036.\u0275\u0275elementStart(0, "p");
    i036.\u0275\u0275text(1, "permissions works!");
    i036.\u0275\u0275elementEnd();
  }
} });
var PermissionsComponent = _PermissionsComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i036.\u0275setClassDebugInfo(PermissionsComponent, { className: "PermissionsComponent", filePath: "src\\app\\components\\settings\\permissions\\permissions.component.ts", lineNumber: 10 });
})();

// src/app/components/settings/roles/roles.component.ts
import { Component as Component26 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i037 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
var _RolesComponent = class _RolesComponent {
};
_RolesComponent.\u0275fac = function RolesComponent_Factory(t) {
  return new (t || _RolesComponent)();
};
_RolesComponent.\u0275cmp = /* @__PURE__ */ i037.\u0275\u0275defineComponent({ type: _RolesComponent, selectors: [["app-roles"]], standalone: true, features: [i037.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function RolesComponent_Template(rf, ctx) {
  if (rf & 1) {
    i037.\u0275\u0275elementStart(0, "p");
    i037.\u0275\u0275text(1, "roles works!");
    i037.\u0275\u0275elementEnd();
  }
} });
var RolesComponent = _RolesComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i037.\u0275setClassDebugInfo(RolesComponent, { className: "RolesComponent", filePath: "src\\app\\components\\settings\\roles\\roles.component.ts", lineNumber: 10 });
})();

// src/app/components/settings/sub-settings/sub-settings.component.ts
import { Component as Component27 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import * as i038 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
var _SubSettingsComponent = class _SubSettingsComponent {
};
_SubSettingsComponent.\u0275fac = function SubSettingsComponent_Factory(t) {
  return new (t || _SubSettingsComponent)();
};
_SubSettingsComponent.\u0275cmp = /* @__PURE__ */ i038.\u0275\u0275defineComponent({ type: _SubSettingsComponent, selectors: [["app-sub-settings"]], standalone: true, features: [i038.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function SubSettingsComponent_Template(rf, ctx) {
  if (rf & 1) {
    i038.\u0275\u0275elementStart(0, "p");
    i038.\u0275\u0275text(1, "sub-settings works!");
    i038.\u0275\u0275elementEnd();
  }
} });
var SubSettingsComponent = _SubSettingsComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i038.\u0275setClassDebugInfo(SubSettingsComponent, { className: "SubSettingsComponent", filePath: "src\\app\\components\\settings\\sub-settings\\sub-settings.component.ts", lineNumber: 10 });
})();

// src/app/app.routes.ts
var routes = [
  {
    path: "",
    component: HomeComponent,
    children: [
      { path: "", component: LandingPageComponent },
      { path: "HowItWorks", component: HowItWorksComponent },
      {
        path: "Quiz",
        component: QuizComponent,
        canActivate: [QuizGuard]
      }
    ]
  },
  {
    path: "settings",
    component: SettingsComponent,
    canActivate: [QuizGuard],
    canActivateChild: [QuizGuard],
    children: [
      { path: "", component: DashboardComponent, canActivate: [adminGuard] },
      {
        path: "settings",
        component: SubSettingsComponent
      },
      {
        path: "users",
        component: UsersComponent,
        canActivate: [roleGuard],
        data: { service: "users" }
      },
      {
        path: "brands",
        component: BrandsComponent,
        canActivate: [roleGuard],
        data: { service: "brands" }
      },
      {
        path: "models",
        component: ModelsComponent,
        canActivate: [roleGuard],
        data: { service: "models" }
      },
      {
        path: "versions",
        component: VersionsComponent,
        canActivate: [roleGuard],
        data: { service: "versions" }
      },
      {
        path: "quizzes",
        component: QuizzesComponent
      },
      {
        path: "questions",
        component: QuestionsComponent2,
        canActivate: [adminGuard]
      },
      {
        path: "features",
        component: FeaturesComponent,
        canActivate: [adminGuard]
      },
      {
        path: "permissions",
        component: PermissionsComponent,
        canActivate: [adminGuard]
      },
      {
        path: "roles",
        component: RolesComponent,
        canActivate: [roleGuard],
        data: { service: "roles" }
      }
    ]
  },
  { path: "Login", component: AuthComponent, canActivate: [authGuard] },
  { path: "**", component: NotFoundComponent }
];

// src/app/app.config.ts
import { provideClientHydration } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_platform-browser.js?v=7f891212";
import { provideAnimationsAsync } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_platform-browser_animations_async.js?v=7f891212";
import { provideHttpClient, withFetch } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_common_http.js?v=7f891212";
var appConfig = {
  providers: [
    provideRouter(routes),
    provideClientHydration(),
    provideAnimationsAsync(),
    provideHttpClient(withFetch())
  ]
};

// src/app/app.component.ts
import { Component as Component28 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
import { RouterOutlet as RouterOutlet3 } from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_router.js?v=7f891212";
import * as i039 from "/@fs/C:/Users/Abdenour/Documents/InterShip/quizCars/.angular/cache/17.3.3/vite/deps/@angular_core.js?v=7f891212";
var _AppComponent = class _AppComponent {
  constructor() {
    this.title = "quizCars";
  }
};
_AppComponent.\u0275fac = function AppComponent_Factory(t) {
  return new (t || _AppComponent)();
};
_AppComponent.\u0275cmp = /* @__PURE__ */ i039.\u0275\u0275defineComponent({ type: _AppComponent, selectors: [["app-root"]], standalone: true, features: [i039.\u0275\u0275ProvidersFeature([AuthComponent]), i039.\u0275\u0275StandaloneFeature], decls: 1, vars: 0, template: function AppComponent_Template(rf, ctx) {
  if (rf & 1) {
    i039.\u0275\u0275element(0, "router-outlet");
  }
}, dependencies: [RouterOutlet3] });
var AppComponent = _AppComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i039.\u0275setClassDebugInfo(AppComponent, { className: "AppComponent", filePath: "src\\app\\app.component.ts", lineNumber: 13 });
})();

// src/main.ts
bootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));


//# sourceMappingURL=data:application/json;base64,